{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Anisina/source/css/blog-style.css","path":"css/blog-style.css","modified":1,"renderable":1},{"_id":"themes/Anisina/source/css/syntax.styl","path":"css/syntax.styl","modified":1,"renderable":1},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/blog.js","path":"js/blog.js","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/Anisina/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/Anisina/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/Anisina/.gitignore","hash":"84703a5cd15fdb8b7a993d335d29d492e70a7d51","modified":1545051889772},{"_id":"themes/Anisina/LICENSE","hash":"c48eaae47a703282e0ffe7b91d69366452046214","modified":1545051889773},{"_id":"themes/Anisina/README.md","hash":"0732f24281a7a2f8566d06c8b8a9d6e7c209a7bd","modified":1545051889773},{"_id":"themes/Anisina/_config.yml","hash":"8d78a626b4e3246bfbdecdb6ee580ed366923237","modified":1545051889815},{"_id":"themes/Anisina/package.json","hash":"e3ec31aef18825e93c0ff369cac93f4e72a00383","modified":1545051889830},{"_id":"source/_drafts/hello-world.md","hash":"e71331bfccc57282b8734b3290f87d8778c9b8dc","modified":1545135932911},{"_id":"source/_posts/PAT每日一题1036 Boys vs Girls.md","hash":"126b08c1bc26fb8f44a41e1ab9fa74d18bc04248","modified":1545138818791},{"_id":"source/_posts/XAMPP配置多站点及根目录（Windows版本）.md","hash":"34c3283b53d1012a1d10bf761d0192a5b9606027","modified":1545135932905},{"_id":"source/_posts/e4-b9-a0-e9-a2-985-2-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e6-b1-82-e5-a5-87-e6-95-b0-e5-92-8c.md","hash":"114ff8c210357560f59134cf8e2744f0d0f29b0d","modified":1545135932908},{"_id":"source/_posts/e4-b9-a0-e9-a2-985-1-e7-ac-a6-e5-8f-b7-e5-87-bd-e6-95-b0.md","hash":"ffa218109c2afcda1c25cb6da71bdc0f5044ec85","modified":1545135932908},{"_id":"source/_posts/e4-b9-a0-e9-a2-985-3-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e8-ae-a1-e7-ae-97-e4-b8-a4-e7-82-b9-e9-97-b4-e7-9a-84-e8-b7-9d-e7-a6-bb.md","hash":"da6f0659f83b8977d7de871947905b02f9fd409a","modified":1545135932908},{"_id":"source/_posts/e5-9f-ba-e4-ba-8ephp-e7-bc-96-e5-86-99-e8-bf-94-e5-9b-9ejson-e6-95-b0-e6-8d-ae-e7-9a-84api-e6-8e-a5-e5-8f-a3.md","hash":"6e5996b2ea772f61908804b4fff36aefca4423f7","modified":1545135932905},{"_id":"source/_posts/e7-bb-83-e4-b9-a05-1-e6-b1-82m-e5-88-b0n-e4-b9-8b-e5-92-8c.md","hash":"f07ef6f31bfcb4b98a1d9d1165dafa39c572f684","modified":1545135932905},{"_id":"source/_posts/e7-bb-83-e4-b9-a05-2-e6-89-be-e4-b8-a4-e4-b8-aa-e6-95-b0-e4-b8-ad-e6-9c-80-e5-a4-a7-e8-80-85.md","hash":"16811a8aecc77e589fea306a474041a77826ac4c","modified":1545135932905},{"_id":"source/_posts/e7-bb-83-e4-b9-a05-3-e6-95-b0-e5-ad-97-e9-87-91-e5-ad-97-e5-a1-94.md","hash":"6599dab7097a4e6f9e285db00d9df1a70d657d58","modified":1545135932908},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1509151198000},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981001-ab-format.md","hash":"547e3493adc339d57b6859a4be85878a5f340c0f","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981002-ab-for-polynomials.md","hash":"eefdc566731b334229d1e356887932a3602e4157","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981008-elevator.md","hash":"fd2194c7339e03f676dd7d52eaef0e10c7f34d52","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981005-spell-it-right.md","hash":"3a86103c5008399affa53d5c8a27b5a046013004","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981011-world-cup-betting.md","hash":"2bb08c25c326f7f459dec02e24530f9518700ef9","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981027-colors-in-mars.md","hash":"c42c81829c8a81b7fab1f5bdd89281c9b4ad374c","modified":1545135932905},{"_id":"source/_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981031-hello-world-for-u.md","hash":"26a93430b8f16ffe1e09e14c517d56616230d27b","modified":1545135932905},{"_id":"themes/Anisina/languages_to_be_added/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1545051889816},{"_id":"themes/Anisina/languages_to_be_added/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1545051889817},{"_id":"themes/Anisina/languages_to_be_added/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1545051889817},{"_id":"themes/Anisina/languages_to_be_added/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1545051889817},{"_id":"themes/Anisina/languages_to_be_added/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1545051889818},{"_id":"themes/Anisina/languages_to_be_added/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1545051889818},{"_id":"themes/Anisina/languages_to_be_added/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1545051889819},{"_id":"themes/Anisina/languages_to_be_added/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1545051889820},{"_id":"themes/Anisina/languages_to_be_added/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1545051889820},{"_id":"themes/Anisina/layout/.DS_Store","hash":"fd623c7cbe0d8fd902f6ca242127fd8db7da6c18","modified":1545051889821},{"_id":"themes/Anisina/layout/404.ejs","hash":"e3951680b387c05722ddc9737515945bfcb59255","modified":1545051889822},{"_id":"themes/Anisina/layout/index.ejs","hash":"9bd5c14793a817009de8cb16b2d8fba557b1f81c","modified":1545051889826},{"_id":"themes/Anisina/layout/layout.ejs","hash":"d99253d25a3bfe3d59cfdc25922ea4256397b55a","modified":1545051889827},{"_id":"themes/Anisina/layout/page.ejs","hash":"eb87024dd76100ca5289699bc35da06a5ece4e12","modified":1545051889827},{"_id":"themes/Anisina/layout/poetry.ejs","hash":"b41c81fef9d56fce413a45a94dffedd2e71e8aca","modified":1545051889828},{"_id":"themes/Anisina/layout/post.ejs","hash":"fb4f3292cdc9ddd9d43a1c17535f666618e3ac33","modified":1545051889829},{"_id":"themes/Anisina/layout/tags.ejs","hash":"d5fbbc5c736a8267df43e7b6b3d005972cad6769","modified":1545051889829},{"_id":"themes/Anisina/layout/works.ejs","hash":"ae67b261c2c6f7b831b311de9b7a367e768a68f9","modified":1545051889830},{"_id":"themes/Anisina/Screenshots/mobile-index.jpeg","hash":"cd75f77f5d865d42182e2233e354eeba9f114d98","modified":1545051889781},{"_id":"themes/Anisina/Screenshots/Anisina.png","hash":"146dd991f55a827a514259e20a51de1e9b07a13d","modified":1545051889777},{"_id":"themes/Anisina/layout/_partial/footer.ejs","hash":"3eb4ffaed41d9e74345285e69e468c32ef2cffc9","modified":1545051889823},{"_id":"themes/Anisina/layout/_partial/head.ejs","hash":"aec24c98978000c7688f088441a1816bcc6de8da","modified":1545051889823},{"_id":"themes/Anisina/layout/_partial/nav.ejs","hash":"653a2c5855a81df10d7bdbc13bc0f62dec3da14b","modified":1545051889825},{"_id":"themes/Anisina/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1545051889826},{"_id":"themes/Anisina/source/css/blog-style.css","hash":"f41460bdd15f86a79fa08d116f16b717ec471a0f","modified":1545051889832},{"_id":"themes/Anisina/source/css/syntax.styl","hash":"a8dd3d14c7a48f408d2b20f86c47a19e394c66d6","modified":1545051889834},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1545051889835},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1545051889839},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1545051889838},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1545051889837},{"_id":"themes/Anisina/source/js/blog.js","hash":"25df78b14de03fd881e5b7e425d0f45d579764c2","modified":1545051889840},{"_id":"themes/Anisina/source/js/bootstrap.min.js","hash":"313da686ebbe387064f2d1899c64ea562b81eb40","modified":1545051889840},{"_id":"themes/Anisina/source/js/jquery.tagcloud.js","hash":"448017ff32f75f444ed7985d10a21b3ad92ab100","modified":1545051889845},{"_id":"themes/Anisina/source/js/totop.js","hash":"7d487a659bf4128241ace8c28f7755e0a44747dd","modified":1545051889845},{"_id":"themes/Anisina/Screenshots/poetry-show.png","hash":"f5fdcd25026a87a0aafeebb1f19cdb3c0a81a666","modified":1545051889814},{"_id":"themes/Anisina/source/css/bootstrap.min.css","hash":"b67828261df0a6bd411c8452ad4d3291c90a466b","modified":1545051889833},{"_id":"themes/Anisina/source/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1545051889836},{"_id":"themes/Anisina/source/js/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1545051889845},{"_id":"themes/Anisina/source/js/jquery.js","hash":"4bb763dc96da604aed08ac024a1a3f5de73eea39","modified":1545051889843},{"_id":"themes/Anisina/Screenshots/mobile-post.jpeg","hash":"2081cdff23a9a8c185a48d9aabcc9dc8e77833ec","modified":1545051889790},{"_id":"themes/Anisina/Screenshots/pc-index.png","hash":"b04094dac75cb656b4244c1dfaf246168a0f8926","modified":1545051889796},{"_id":"themes/Anisina/Screenshots/pc-post.png","hash":"cde56c0797b6ff8dd555fb1f8c3f9b21bceaa3be","modified":1545051889811},{"_id":"public/2018/12/17/hello-world/index.html","hash":"09e29c465ae23f81766f31bb6bf940e6220b6437","modified":1545138907077},{"_id":"public/2018/10/10/PAT每日一题1036 Boys vs Girls/index.html","hash":"af2a4a1366b828151728fde1f055c3575c023ce4","modified":1545138907077},{"_id":"public/2018/10/03/e4-b9-a0-e9-a2-985-3-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e8-ae-a1-e7-ae-97-e4-b8-a4-e7-82-b9-e9-97-b4-e7-9a-84-e8-b7-9d-e7-a6-bb/index.html","hash":"4338b743a4162a127daa53db10720720c47db937","modified":1545138907077},{"_id":"public/2018/10/03/e4-b9-a0-e9-a2-985-2-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e6-b1-82-e5-a5-87-e6-95-b0-e5-92-8c/index.html","hash":"9d314c88449c9a80091807abf818bff084f862f8","modified":1545138907077},{"_id":"public/2018/10/02/e4-b9-a0-e9-a2-985-1-e7-ac-a6-e5-8f-b7-e5-87-bd-e6-95-b0/index.html","hash":"67a228760e897cf9cf45ea24f574c22d7b1d10cc","modified":1545138907077},{"_id":"public/2018/10/02/e7-bb-83-e4-b9-a05-3-e6-95-b0-e5-ad-97-e9-87-91-e5-ad-97-e5-a1-94/index.html","hash":"738330b0efeda5f9f68433c96326bb5d465f0e1c","modified":1545138907078},{"_id":"public/2018/10/02/e7-bb-83-e4-b9-a05-2-e6-89-be-e4-b8-a4-e4-b8-aa-e6-95-b0-e4-b8-ad-e6-9c-80-e5-a4-a7-e8-80-85/index.html","hash":"a139585f08ea59c201796a0717939186f7112b97","modified":1545138907078},{"_id":"public/2018/10/02/e7-bb-83-e4-b9-a05-1-e6-b1-82m-e5-88-b0n-e4-b9-8b-e5-92-8c/index.html","hash":"0994ef8a9ec614a6a34ac3adc325a4d1e71fb336","modified":1545138907078},{"_id":"public/2018/10/02/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981031-hello-world-for-u/index.html","hash":"bc77558f5dc2767ed118ed6fb9130a36e783e31b","modified":1545138907078},{"_id":"public/2018/10/02/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981011-world-cup-betting/index.html","hash":"bf4279abf641054e7cd9c6958cb0541f725f707c","modified":1545138907078},{"_id":"public/2018/10/02/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981008-elevator/index.html","hash":"c8942d9b02e9503e2a535864f20c40fb2836aa87","modified":1545138907078},{"_id":"public/2018/10/02/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981005-spell-it-right/index.html","hash":"85a46f9950e8fe80069502f6b269e2aae95f0627","modified":1545138907078},{"_id":"public/2018/09/30/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981002-ab-for-polynomials/index.html","hash":"f226abff6bc96df604831c00061e9eb5bd9404ea","modified":1545138907079},{"_id":"public/2018/09/29/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981001-ab-format/index.html","hash":"9e8ad269b3b7c26dbb79e86c5d0dd58ea40f0913","modified":1545138907079},{"_id":"public/2018/09/13/e5-9f-ba-e4-ba-8ephp-e7-bc-96-e5-86-99-e8-bf-94-e5-9b-9ejson-e6-95-b0-e6-8d-ae-e7-9a-84api-e6-8e-a5-e5-8f-a3/index.html","hash":"daad382cbe8818e859ac63c40bfb2ef81ab25303","modified":1545138907079},{"_id":"public/2018/09/13/XAMPP配置多站点及根目录（Windows版本）/index.html","hash":"09a988147d3c0ee6684610a6c8b2e98b0582a74f","modified":1545138907079},{"_id":"public/archives/index.html","hash":"4e600a1880cf2fdf357d73c74ba5437c49749064","modified":1545138907079},{"_id":"public/archives/page/2/index.html","hash":"d485eca505a0bb365b5523267810c170b5d12137","modified":1545138907080},{"_id":"public/archives/page/3/index.html","hash":"90356537b1f6c6ec568d5c3a168692a9b3f731f3","modified":1545138907080},{"_id":"public/archives/2018/index.html","hash":"fffca928eb30ee87b05f1f8dfd31c4cbfde09f8c","modified":1545138907080},{"_id":"public/archives/2018/page/2/index.html","hash":"a865000636a3aefe85fe9e60defe8e4a594018b1","modified":1545138907080},{"_id":"public/archives/2018/page/3/index.html","hash":"f467c290fc6273973891065c83d9e0576701b23b","modified":1545138907081},{"_id":"public/archives/2018/09/index.html","hash":"87708db459d5a7f150408c8f652c36824bef0e6c","modified":1545138907081},{"_id":"public/archives/2018/10/index.html","hash":"7963ac9ef6ae837c85c65243cc5f8c3faef1829d","modified":1545138907081},{"_id":"public/archives/2018/10/page/2/index.html","hash":"79f2201e25ec767590f0e13defa8463b6f664665","modified":1545138907081},{"_id":"public/archives/2018/12/index.html","hash":"01eb3bb04c19b5ba26f49c4f608290b825c74a54","modified":1545138907081},{"_id":"public/categories/浙大版《C语言程序设计（第3版）》题目集/index.html","hash":"16e7b0d6d0b8ee0e22a5d5223bba5eef6285ed90","modified":1545138907083},{"_id":"public/categories/PAT/index.html","hash":"713af9890d4eb15c70ecace061b7fc7d1d90c02a","modified":1545138907083},{"_id":"public/categories/WEB/index.html","hash":"50bc4e148d64e40354ab6c2b978f5f9ddf8f9379","modified":1545138907083},{"_id":"public/categories/PHP/index.html","hash":"78815244bf810bda5b5623f9950d592f28b03ef0","modified":1545138907083},{"_id":"public/page/3/index.html","hash":"18ce0a3df1efc2a633ea005f68b3c9c76cff1723","modified":1545138907083},{"_id":"public/tags/Web服务器/index.html","hash":"305e771221c49a164dcd2aa1aea75334384a45f1","modified":1545138907083},{"_id":"public/tags/XAMPP/index.html","hash":"d590a6f9335db24e369b05e8506f26831242997a","modified":1545138907083},{"_id":"public/tags/多站点设置/index.html","hash":"65ddc36d741086718c4a35bc3fff0e9235be3345","modified":1545138907084},{"_id":"public/tags/API/index.html","hash":"9dbb2c4dc07c01eace4764087e72417ff69a5f2f","modified":1545138907084},{"_id":"public/tags/PHP/index.html","hash":"3c4ac0eac8950fca2fd543687640f1b0bca64392","modified":1545138907084},{"_id":"public/2018/10/02/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981027-colors-in-mars/index.html","hash":"2e68dd3532a49ddf78f0ba67ffae06c1dd295144","modified":1545138907084},{"_id":"public/index.html","hash":"3c5578de5a133ac03815a801a856550d7421cfbb","modified":1545138907084},{"_id":"public/page/2/index.html","hash":"a62f019722f92bc066efa0edce6e01e1b286a85d","modified":1545138907084},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1545138907093},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1545138907093},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1545138907093},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1545138907094},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1545138907379},{"_id":"public/css/syntax.css","hash":"4616879fec214c9cc4f5835615348f0bbeabf2a9","modified":1545138907388},{"_id":"public/js/blog.js","hash":"0f805c744ef8a48c0abdd9d204cfc19ee6cafc14","modified":1545138907388},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1545138907388},{"_id":"public/js/totop.js","hash":"11ede60fccb7c763d6973f80efc78b47c0843746","modified":1545138907388},{"_id":"public/css/blog-style.css","hash":"c6830e31138e412c2aa05228c4cd6035063fe651","modified":1545138907411},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1545138907421},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1545138907441},{"_id":"public/css/bootstrap.min.css","hash":"c5db932e115ff97af7b4512b947cde3ba2964db8","modified":1545138907444},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1545138907450}],"Category":[{"name":"浙大版《C语言程序设计（第3版）》题目集","_id":"cjptrt69g00027svzndhhhq55"},{"name":"PAT","_id":"cjptrt69n00077svz72ucgtll"},{"name":"WEB","_id":"cjptrt69s000c7svzc4xajrjp"},{"name":"PHP","_id":"cjptrt69x000i7svzjiaq3za8"}],"Data":[],"Page":[],"Post":[{"title":"世界，您好！","url":"1.html","id":"1","_content":"\n欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！","source":"_drafts/hello-world.md","raw":"---\ntitle: 世界，您好！\nurl: 1.html\nid: 1\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ntags:\n---\n\n欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！","slug":"hello-world","published":0,"date":"2018-12-18T12:25:32.909Z","updated":"2018-12-18T12:25:32.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69500007svz0iaxum9p","content":"<p>欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！</p>\n"},{"title":"PAT每日一题|1036 Boys vs Girls","url":"157.html","id":"157","date":"2018-10-10T10:36:20.000Z","_content":"\nThis time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a positive integer N, followed by N lines of student information. Each line contains a student's `name`, `gender`, `ID` and `grade`, separated by a space, where `name` and `ID` are strings of no more than 10 characters with no space, `gender` is either `F` (female) or `M` (male), and `grade` is an integer between 0 and 100. It is guaranteed that all the grades are distinct.\n\n### Output Specification:\n\nFor each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference grade​F​​−grade​M​​. If one such kind of student is missing, output `Absent` in the corresponding line, and output `NA` in the third line instead.\n\n### Sample Input 1:\n\n    3\n    Joe M Math990112 89\n    Mike M CS991301 100\n    Mary F EE990830 95\n\n\n### Sample Output 1:\n\n    Mary EE990830\n    Joe Math990112\n    6\n\n\n### Sample Input 2:\n\n    1\n    Jean M AA980920 60\n\n\n### Sample Output 2:\n\n    Absent\n    Jean AA980920\n    NA\n\n\n​    \n    #include <stdio.h>\n    #include <math.h>\n    #include <string.h>\n    struct stu\n    {\n    \tchar name[100];\n    \tchar gender;\n    \tchar id[100];\n    \tint grade;\n    }stu[10000],f,m;\n    \n    int main() {\n    \tint n;\n    \tint i;\n    \tint result=0;\n    \tint lenf, lenm;\n    \tf.grade = -1;\n    \tm.grade = 101;\n    \tscanf(\"%d\", &n);\n    \tif (n != 0) {\n    \n    \t\tfor (i = 0; i < n; i++) {\n    \t\t\tscanf(\"%s %c %s %d\", &stu[i].name, &stu[i].gender, &stu[i].id, &stu[i].grade);\n    \t\t\tif (stu[i].gender == 'M') {\n    \n    \t\t\t\tif (m.grade > stu[i].grade) {\n    \t\t\t\t\tm = stu[i];\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\telse {\n    \t\t\t\tif (f.grade < stu[i].grade) {\n    \t\t\t\t\tf = stu[i];\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tlenf = strlen(f.id);\n    \t\tlenm = strlen(m.id);\n    \t\tif (lenf != 0 & lenm != 0) {\n    \t\t\tresult = f.grade - m.grade;\n    \t\t\tprintf(\"%s %s\\n\", f.name, f.id);\n    \t\t\tprintf(\"%s %s\\n\", m.name, m.id);\n    \t\t\tprintf(\"%d\", result);\n    \t\t}\n    \t\telse if (lenf == 0 & lenm != 0) {\n    \t\t\tprintf(\"Absent\\n%s %s\\nNA\", m.name, m.id);\n    \t\t}\n    \t\telse if (lenf != 0 & lenm == 0) {\n    \t\t\tprintf(\"%s %s\\nAbsent\\nNA\", f.name, f.id);\n    \t\t}\n    \t\t\n    \t}\n    \telse {\n    \t\tprintf(\"Absent\\nAbsent\\nNA\");\n    \t}\n    \t\n    }","source":"_posts/PAT每日一题1036 Boys vs Girls.md","raw":"---\ntitle: PAT每日一题|1036 Boys vs Girls\nurl: 157.html\nid: 157\ncategories:\n  - PAT\ndate: 2018-10-10 18:36:20\ntags:\n---\n\nThis time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a positive integer N, followed by N lines of student information. Each line contains a student's `name`, `gender`, `ID` and `grade`, separated by a space, where `name` and `ID` are strings of no more than 10 characters with no space, `gender` is either `F` (female) or `M` (male), and `grade` is an integer between 0 and 100. It is guaranteed that all the grades are distinct.\n\n### Output Specification:\n\nFor each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference grade​F​​−grade​M​​. If one such kind of student is missing, output `Absent` in the corresponding line, and output `NA` in the third line instead.\n\n### Sample Input 1:\n\n    3\n    Joe M Math990112 89\n    Mike M CS991301 100\n    Mary F EE990830 95\n\n\n### Sample Output 1:\n\n    Mary EE990830\n    Joe Math990112\n    6\n\n\n### Sample Input 2:\n\n    1\n    Jean M AA980920 60\n\n\n### Sample Output 2:\n\n    Absent\n    Jean AA980920\n    NA\n\n\n​    \n    #include <stdio.h>\n    #include <math.h>\n    #include <string.h>\n    struct stu\n    {\n    \tchar name[100];\n    \tchar gender;\n    \tchar id[100];\n    \tint grade;\n    }stu[10000],f,m;\n    \n    int main() {\n    \tint n;\n    \tint i;\n    \tint result=0;\n    \tint lenf, lenm;\n    \tf.grade = -1;\n    \tm.grade = 101;\n    \tscanf(\"%d\", &n);\n    \tif (n != 0) {\n    \n    \t\tfor (i = 0; i < n; i++) {\n    \t\t\tscanf(\"%s %c %s %d\", &stu[i].name, &stu[i].gender, &stu[i].id, &stu[i].grade);\n    \t\t\tif (stu[i].gender == 'M') {\n    \n    \t\t\t\tif (m.grade > stu[i].grade) {\n    \t\t\t\t\tm = stu[i];\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\telse {\n    \t\t\t\tif (f.grade < stu[i].grade) {\n    \t\t\t\t\tf = stu[i];\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tlenf = strlen(f.id);\n    \t\tlenm = strlen(m.id);\n    \t\tif (lenf != 0 & lenm != 0) {\n    \t\t\tresult = f.grade - m.grade;\n    \t\t\tprintf(\"%s %s\\n\", f.name, f.id);\n    \t\t\tprintf(\"%s %s\\n\", m.name, m.id);\n    \t\t\tprintf(\"%d\", result);\n    \t\t}\n    \t\telse if (lenf == 0 & lenm != 0) {\n    \t\t\tprintf(\"Absent\\n%s %s\\nNA\", m.name, m.id);\n    \t\t}\n    \t\telse if (lenf != 0 & lenm == 0) {\n    \t\t\tprintf(\"%s %s\\nAbsent\\nNA\", f.name, f.id);\n    \t\t}\n    \t\t\n    \t}\n    \telse {\n    \t\tprintf(\"Absent\\nAbsent\\nNA\");\n    \t}\n    \t\n    }","slug":"PAT每日一题1036 Boys vs Girls","published":1,"updated":"2018-12-18T13:13:38.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69d00017svzu7ffm7vq","content":"<p>This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a positive integer N, followed by N lines of student information. Each line contains a student’s <code>name</code>, <code>gender</code>, <code>ID</code> and <code>grade</code>, separated by a space, where <code>name</code> and <code>ID</code> are strings of no more than 10 characters with no space, <code>gender</code> is either <code>F</code> (female) or <code>M</code> (male), and <code>grade</code> is an integer between 0 and 100. It is guaranteed that all the grades are distinct.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference grade​F​​−grade​M​​. If one such kind of student is missing, output <code>Absent</code> in the corresponding line, and output <code>NA</code> in the third line instead.</p>\n<h3 id=\"Sample-Input-1\"><a href=\"#Sample-Input-1\" class=\"headerlink\" title=\"Sample Input 1:\"></a>Sample Input 1:</h3><pre><code>3\nJoe M Math990112 89\nMike M CS991301 100\nMary F EE990830 95\n</code></pre><h3 id=\"Sample-Output-1\"><a href=\"#Sample-Output-1\" class=\"headerlink\" title=\"Sample Output 1:\"></a>Sample Output 1:</h3><pre><code>Mary EE990830\nJoe Math990112\n6\n</code></pre><h3 id=\"Sample-Input-2\"><a href=\"#Sample-Input-2\" class=\"headerlink\" title=\"Sample Input 2:\"></a>Sample Input 2:</h3><pre><code>1\nJean M AA980920 60\n</code></pre><h3 id=\"Sample-Output-2\"><a href=\"#Sample-Output-2\" class=\"headerlink\" title=\"Sample Output 2:\"></a>Sample Output 2:</h3><pre><code>Absent\nJean AA980920\nNA\n</code></pre><p>​    </p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;string.h&gt;\nstruct stu\n{\n    char name[100];\n    char gender;\n    char id[100];\n    int grade;\n}stu[10000],f,m;\n\nint main() {\n    int n;\n    int i;\n    int result=0;\n    int lenf, lenm;\n    f.grade = -1;\n    m.grade = 101;\n    scanf(&quot;%d&quot;, &amp;n);\n    if (n != 0) {\n\n        for (i = 0; i &lt; n; i++) {\n            scanf(&quot;%s %c %s %d&quot;, &amp;stu[i].name, &amp;stu[i].gender, &amp;stu[i].id, &amp;stu[i].grade);\n            if (stu[i].gender == &apos;M&apos;) {\n\n                if (m.grade &gt; stu[i].grade) {\n                    m = stu[i];\n                }\n            }\n            else {\n                if (f.grade &lt; stu[i].grade) {\n                    f = stu[i];\n                }\n            }\n        }\n        lenf = strlen(f.id);\n        lenm = strlen(m.id);\n        if (lenf != 0 &amp; lenm != 0) {\n            result = f.grade - m.grade;\n            printf(&quot;%s %s\\n&quot;, f.name, f.id);\n            printf(&quot;%s %s\\n&quot;, m.name, m.id);\n            printf(&quot;%d&quot;, result);\n        }\n        else if (lenf == 0 &amp; lenm != 0) {\n            printf(&quot;Absent\\n%s %s\\nNA&quot;, m.name, m.id);\n        }\n        else if (lenf != 0 &amp; lenm == 0) {\n            printf(&quot;%s %s\\nAbsent\\nNA&quot;, f.name, f.id);\n        }\n\n    }\n    else {\n        printf(&quot;Absent\\nAbsent\\nNA&quot;);\n    }\n\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female students.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a positive integer N, followed by N lines of student information. Each line contains a student’s <code>name</code>, <code>gender</code>, <code>ID</code> and <code>grade</code>, separated by a space, where <code>name</code> and <code>ID</code> are strings of no more than 10 characters with no space, <code>gender</code> is either <code>F</code> (female) or <code>M</code> (male), and <code>grade</code> is an integer between 0 and 100. It is guaranteed that all the grades are distinct.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, output in 3 lines. The first line gives the name and ID of the female student with the highest grade, and the second line gives that of the male student with the lowest grade. The third line gives the difference grade​F​​−grade​M​​. If one such kind of student is missing, output <code>Absent</code> in the corresponding line, and output <code>NA</code> in the third line instead.</p>\n<h3 id=\"Sample-Input-1\"><a href=\"#Sample-Input-1\" class=\"headerlink\" title=\"Sample Input 1:\"></a>Sample Input 1:</h3><pre><code>3\nJoe M Math990112 89\nMike M CS991301 100\nMary F EE990830 95\n</code></pre><h3 id=\"Sample-Output-1\"><a href=\"#Sample-Output-1\" class=\"headerlink\" title=\"Sample Output 1:\"></a>Sample Output 1:</h3><pre><code>Mary EE990830\nJoe Math990112\n6\n</code></pre><h3 id=\"Sample-Input-2\"><a href=\"#Sample-Input-2\" class=\"headerlink\" title=\"Sample Input 2:\"></a>Sample Input 2:</h3><pre><code>1\nJean M AA980920 60\n</code></pre><h3 id=\"Sample-Output-2\"><a href=\"#Sample-Output-2\" class=\"headerlink\" title=\"Sample Output 2:\"></a>Sample Output 2:</h3><pre><code>Absent\nJean AA980920\nNA\n</code></pre><p>​    </p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;string.h&gt;\nstruct stu\n{\n    char name[100];\n    char gender;\n    char id[100];\n    int grade;\n}stu[10000],f,m;\n\nint main() {\n    int n;\n    int i;\n    int result=0;\n    int lenf, lenm;\n    f.grade = -1;\n    m.grade = 101;\n    scanf(&quot;%d&quot;, &amp;n);\n    if (n != 0) {\n\n        for (i = 0; i &lt; n; i++) {\n            scanf(&quot;%s %c %s %d&quot;, &amp;stu[i].name, &amp;stu[i].gender, &amp;stu[i].id, &amp;stu[i].grade);\n            if (stu[i].gender == &apos;M&apos;) {\n\n                if (m.grade &gt; stu[i].grade) {\n                    m = stu[i];\n                }\n            }\n            else {\n                if (f.grade &lt; stu[i].grade) {\n                    f = stu[i];\n                }\n            }\n        }\n        lenf = strlen(f.id);\n        lenm = strlen(m.id);\n        if (lenf != 0 &amp; lenm != 0) {\n            result = f.grade - m.grade;\n            printf(&quot;%s %s\\n&quot;, f.name, f.id);\n            printf(&quot;%s %s\\n&quot;, m.name, m.id);\n            printf(&quot;%d&quot;, result);\n        }\n        else if (lenf == 0 &amp; lenm != 0) {\n            printf(&quot;Absent\\n%s %s\\nNA&quot;, m.name, m.id);\n        }\n        else if (lenf != 0 &amp; lenm == 0) {\n            printf(&quot;%s %s\\nAbsent\\nNA&quot;, f.name, f.id);\n        }\n\n    }\n    else {\n        printf(&quot;Absent\\nAbsent\\nNA&quot;);\n    }\n\n}\n</code></pre>"},{"title":"XAMPP配置多站点及根目录（Windows版本）","url":"51.html","id":"51","date":"2018-09-13T00:49:07.000Z","_content":"\n1、首先修改C:\\\\WINDOWS\\\\System32\\\\drivers\\\\etc目录下的 hosts 文件，用记事本打开，加入： （是在文件的未尾加入） 127.0.0.1 a.jenkin.fun 127.0.0.1 b.jenkin.fun 2、打开xampp\\\\apache\\\\conf\\\\httpd.conf文件，搜索 “Include conf/extra/httpd-vhosts.conf”，确保前面没有 # 注释符，也就是确保引入了 vhosts 虚拟主机配置文件。 开启了httpd-vhosts.conf，默认的httpd.conf默认配置失效（确保 httpd-vhosts.conf 文件里也开启了虚拟主机配置，见第3条），访问此IP的域名将全部指向 vhosts.conf 中的第一个虚拟主机。（注意是第一个，详见第4） 3、在虚拟主机设置文件xampp\\\\apache\\\\conf\\\\extra\\\\httpd-vhosts.conf里设置： 取消 NameVirtualHost *:80 前面的 ##，这样就启用了 vhosts.conf ，默认的httpd.conf默认配置失效。虚拟主机配置将只设置在 httpd-vhosts.conf 里。 <VirtualHost *:80> DocumentRoot \"a.jenkin.fun 的网站目录\" ServerName a.jenkin.fun </VirtualHost> <VirtualHost *:80> DocumentRoot \" b.jenkin.fun 的网站目录\" ServerName a.jenkin.fun </VirtualHost> 4、 设置完了第3条之后，你会发现访问 localhost直接指向到设置的 a 那个路径去了，这个问题在第2条有讲。也就是开启了 vhosts后，默认的 httpd 的配置就会失效了，默认的访问就指向到 vhosts 里的第一条设置去了。这时候你要把 localhost的目录配置给设置回来。 <VirtualHost *:80> DocumentRoot \"C:/xampp/htdocs\" ServerName localhost </VirtualHost> 至此，XAMPP 的虚拟主机设置完毕。 重启XAMPP中的Apache，现在访问 localhost 还是原来的 XAMPP 的帮助指南，访问 a.jenkin.fun 将指向到绑定的 a 目录，访问 b.jenkin.fun将指向到绑定的 b 目录。","source":"_posts/XAMPP配置多站点及根目录（Windows版本）.md","raw":"---\ntitle: XAMPP配置多站点及根目录（Windows版本）\ntags:\n  - Web服务器\n  - XAMPP\n  - 多站点设置\nurl: 51.html\nid: 51\ncategories:\n  - WEB\ndate: 2018-09-13 08:49:07\n---\n\n1、首先修改C:\\\\WINDOWS\\\\System32\\\\drivers\\\\etc目录下的 hosts 文件，用记事本打开，加入： （是在文件的未尾加入） 127.0.0.1 a.jenkin.fun 127.0.0.1 b.jenkin.fun 2、打开xampp\\\\apache\\\\conf\\\\httpd.conf文件，搜索 “Include conf/extra/httpd-vhosts.conf”，确保前面没有 # 注释符，也就是确保引入了 vhosts 虚拟主机配置文件。 开启了httpd-vhosts.conf，默认的httpd.conf默认配置失效（确保 httpd-vhosts.conf 文件里也开启了虚拟主机配置，见第3条），访问此IP的域名将全部指向 vhosts.conf 中的第一个虚拟主机。（注意是第一个，详见第4） 3、在虚拟主机设置文件xampp\\\\apache\\\\conf\\\\extra\\\\httpd-vhosts.conf里设置： 取消 NameVirtualHost *:80 前面的 ##，这样就启用了 vhosts.conf ，默认的httpd.conf默认配置失效。虚拟主机配置将只设置在 httpd-vhosts.conf 里。 <VirtualHost *:80> DocumentRoot \"a.jenkin.fun 的网站目录\" ServerName a.jenkin.fun </VirtualHost> <VirtualHost *:80> DocumentRoot \" b.jenkin.fun 的网站目录\" ServerName a.jenkin.fun </VirtualHost> 4、 设置完了第3条之后，你会发现访问 localhost直接指向到设置的 a 那个路径去了，这个问题在第2条有讲。也就是开启了 vhosts后，默认的 httpd 的配置就会失效了，默认的访问就指向到 vhosts 里的第一条设置去了。这时候你要把 localhost的目录配置给设置回来。 <VirtualHost *:80> DocumentRoot \"C:/xampp/htdocs\" ServerName localhost </VirtualHost> 至此，XAMPP 的虚拟主机设置完毕。 重启XAMPP中的Apache，现在访问 localhost 还是原来的 XAMPP 的帮助指南，访问 a.jenkin.fun 将指向到绑定的 a 目录，访问 b.jenkin.fun将指向到绑定的 b 目录。","slug":"XAMPP配置多站点及根目录（Windows版本）","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69i00037svzwa3765a0","content":"<p>1、首先修改C:\\WINDOWS\\System32\\drivers\\etc目录下的 hosts 文件，用记事本打开，加入： （是在文件的未尾加入） 127.0.0.1 a.jenkin.fun 127.0.0.1 b.jenkin.fun 2、打开xampp\\apache\\conf\\httpd.conf文件，搜索 “Include conf/extra/httpd-vhosts.conf”，确保前面没有 # 注释符，也就是确保引入了 vhosts 虚拟主机配置文件。 开启了httpd-vhosts.conf，默认的httpd.conf默认配置失效（确保 httpd-vhosts.conf 文件里也开启了虚拟主机配置，见第3条），访问此IP的域名将全部指向 vhosts.conf 中的第一个虚拟主机。（注意是第一个，详见第4） 3、在虚拟主机设置文件xampp\\apache\\conf\\extra\\httpd-vhosts.conf里设置： 取消 NameVirtualHost <em>:80 前面的 ##，这样就启用了 vhosts.conf ，默认的httpd.conf默认配置失效。虚拟主机配置将只设置在 httpd-vhosts.conf 里。 &lt;VirtualHost </em>:80&gt; DocumentRoot “a.jenkin.fun 的网站目录” ServerName a.jenkin.fun  <virtualhost *:80=\"\"> DocumentRoot “ b.jenkin.fun 的网站目录” ServerName a.jenkin.fun </virtualhost> 4、 设置完了第3条之后，你会发现访问 localhost直接指向到设置的 a 那个路径去了，这个问题在第2条有讲。也就是开启了 vhosts后，默认的 httpd 的配置就会失效了，默认的访问就指向到 vhosts 里的第一条设置去了。这时候你要把 localhost的目录配置给设置回来。 <virtualhost *:80=\"\"> DocumentRoot “C:/xampp/htdocs” ServerName localhost </virtualhost> 至此，XAMPP 的虚拟主机设置完毕。 重启XAMPP中的Apache，现在访问 localhost 还是原来的 XAMPP 的帮助指南，访问 a.jenkin.fun 将指向到绑定的 a 目录，访问 b.jenkin.fun将指向到绑定的 b 目录。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、首先修改C:\\WINDOWS\\System32\\drivers\\etc目录下的 hosts 文件，用记事本打开，加入： （是在文件的未尾加入） 127.0.0.1 a.jenkin.fun 127.0.0.1 b.jenkin.fun 2、打开xampp\\apache\\conf\\httpd.conf文件，搜索 “Include conf/extra/httpd-vhosts.conf”，确保前面没有 # 注释符，也就是确保引入了 vhosts 虚拟主机配置文件。 开启了httpd-vhosts.conf，默认的httpd.conf默认配置失效（确保 httpd-vhosts.conf 文件里也开启了虚拟主机配置，见第3条），访问此IP的域名将全部指向 vhosts.conf 中的第一个虚拟主机。（注意是第一个，详见第4） 3、在虚拟主机设置文件xampp\\apache\\conf\\extra\\httpd-vhosts.conf里设置： 取消 NameVirtualHost <em>:80 前面的 ##，这样就启用了 vhosts.conf ，默认的httpd.conf默认配置失效。虚拟主机配置将只设置在 httpd-vhosts.conf 里。 &lt;VirtualHost </em>:80&gt; DocumentRoot “a.jenkin.fun 的网站目录” ServerName a.jenkin.fun  <virtualhost *:80=\"\"> DocumentRoot “ b.jenkin.fun 的网站目录” ServerName a.jenkin.fun </virtualhost> 4、 设置完了第3条之后，你会发现访问 localhost直接指向到设置的 a 那个路径去了，这个问题在第2条有讲。也就是开启了 vhosts后，默认的 httpd 的配置就会失效了，默认的访问就指向到 vhosts 里的第一条设置去了。这时候你要把 localhost的目录配置给设置回来。 <virtualhost *:80=\"\"> DocumentRoot “C:/xampp/htdocs” ServerName localhost </virtualhost> 至此，XAMPP 的虚拟主机设置完毕。 重启XAMPP中的Apache，现在访问 localhost 还是原来的 XAMPP 的帮助指南，访问 a.jenkin.fun 将指向到绑定的 a 目录，访问 b.jenkin.fun将指向到绑定的 b 目录。</p>\n"},{"title":"习题5-2 使用函数求奇数和","url":"152.html","id":"152","date":"2018-10-03T01:00:12.000Z","_content":"\n本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。\n\n### 函数接口定义：\n\n    int even( int n );\n    int OddSum( int List[], int N );\n    \n\n其中函数`even`将根据用户传入的参数`n`的奇偶性返回相应值：当`n`为偶数时返回1，否则返回0。函数`OddSum`负责计算并返回传入的`N`个整数`List[]`中所有奇数的和。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    #define MAXN 10\n    \n    int even( int n );\n    int OddSum( int List[], int N );\n    \n    int main()\n    {    \n        int List[MAXN], N, i;\n    \n        scanf(\"%d\", &N);\n        printf(\"Sum of ( \");\n        for ( i=0; i<N; i++ ) {\n            scanf(\"%d\", &List[i]);\n            if ( even(List[i])==0 )\n                printf(\"%d \", List[i]);\n        }\n        printf(\") = %d\\n\", OddSum(List, N));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    6\n    2 -3 7 88 0 15\n    \n\n### 输出样例：\n\n    Sum of ( -3 7 15 ) = 19\n    \n\n    int even(int n) {\n    \tif (n % 2 == 0) {\n    \t\treturn 1;\n    \t}\n    \telse return 0;\n    }\n    int OddSum(int List[], int N) {\n    \tint i, sum = 0;\n    \tfor (i = 0; i < N; i++) {\n    \t\tif (!even(List[i])) {\n    \t\t\tsum = sum + List[i];\n    }\n    \t}\n    \treturn sum;\n    }","source":"_posts/e4-b9-a0-e9-a2-985-2-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e6-b1-82-e5-a5-87-e6-95-b0-e5-92-8c.md","raw":"---\ntitle: 习题5-2 使用函数求奇数和\nurl: 152.html\nid: 152\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-03 09:00:12\ntags:\n---\n\n本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。\n\n### 函数接口定义：\n\n    int even( int n );\n    int OddSum( int List[], int N );\n    \n\n其中函数`even`将根据用户传入的参数`n`的奇偶性返回相应值：当`n`为偶数时返回1，否则返回0。函数`OddSum`负责计算并返回传入的`N`个整数`List[]`中所有奇数的和。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    #define MAXN 10\n    \n    int even( int n );\n    int OddSum( int List[], int N );\n    \n    int main()\n    {    \n        int List[MAXN], N, i;\n    \n        scanf(\"%d\", &N);\n        printf(\"Sum of ( \");\n        for ( i=0; i<N; i++ ) {\n            scanf(\"%d\", &List[i]);\n            if ( even(List[i])==0 )\n                printf(\"%d \", List[i]);\n        }\n        printf(\") = %d\\n\", OddSum(List, N));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    6\n    2 -3 7 88 0 15\n    \n\n### 输出样例：\n\n    Sum of ( -3 7 15 ) = 19\n    \n\n    int even(int n) {\n    \tif (n % 2 == 0) {\n    \t\treturn 1;\n    \t}\n    \telse return 0;\n    }\n    int OddSum(int List[], int N) {\n    \tint i, sum = 0;\n    \tfor (i = 0; i < N; i++) {\n    \t\tif (!even(List[i])) {\n    \t\t\tsum = sum + List[i];\n    }\n    \t}\n    \treturn sum;\n    }","slug":"e4-b9-a0-e9-a2-985-2-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e6-b1-82-e5-a5-87-e6-95-b0-e5-92-8c","published":1,"updated":"2018-12-18T12:25:32.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69j00047svz373i6690","content":"<p>本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int even( int n );\nint OddSum( int List[], int N );\n</code></pre><p>其中函数<code>even</code>将根据用户传入的参数<code>n</code>的奇偶性返回相应值：当<code>n</code>为偶数时返回1，否则返回0。函数<code>OddSum</code>负责计算并返回传入的<code>N</code>个整数<code>List[]</code>中所有奇数的和。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\n#define MAXN 10\n\nint even( int n );\nint OddSum( int List[], int N );\n\nint main()\n{    \n    int List[MAXN], N, i;\n\n    scanf(&quot;%d&quot;, &amp;N);\n    printf(&quot;Sum of ( &quot;);\n    for ( i=0; i&lt;N; i++ ) {\n        scanf(&quot;%d&quot;, &amp;List[i]);\n        if ( even(List[i])==0 )\n            printf(&quot;%d &quot;, List[i]);\n    }\n    printf(&quot;) = %d\\n&quot;, OddSum(List, N));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>6\n2 -3 7 88 0 15\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>Sum of ( -3 7 15 ) = 19\n\n\nint even(int n) {\n    if (n % 2 == 0) {\n        return 1;\n    }\n    else return 0;\n}\nint OddSum(int List[], int N) {\n    int i, sum = 0;\n    for (i = 0; i &lt; N; i++) {\n        if (!even(List[i])) {\n            sum = sum + List[i];\n}\n    }\n    return sum;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int even( int n );\nint OddSum( int List[], int N );\n</code></pre><p>其中函数<code>even</code>将根据用户传入的参数<code>n</code>的奇偶性返回相应值：当<code>n</code>为偶数时返回1，否则返回0。函数<code>OddSum</code>负责计算并返回传入的<code>N</code>个整数<code>List[]</code>中所有奇数的和。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\n#define MAXN 10\n\nint even( int n );\nint OddSum( int List[], int N );\n\nint main()\n{    \n    int List[MAXN], N, i;\n\n    scanf(&quot;%d&quot;, &amp;N);\n    printf(&quot;Sum of ( &quot;);\n    for ( i=0; i&lt;N; i++ ) {\n        scanf(&quot;%d&quot;, &amp;List[i]);\n        if ( even(List[i])==0 )\n            printf(&quot;%d &quot;, List[i]);\n    }\n    printf(&quot;) = %d\\n&quot;, OddSum(List, N));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>6\n2 -3 7 88 0 15\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>Sum of ( -3 7 15 ) = 19\n\n\nint even(int n) {\n    if (n % 2 == 0) {\n        return 1;\n    }\n    else return 0;\n}\nint OddSum(int List[], int N) {\n    int i, sum = 0;\n    for (i = 0; i &lt; N; i++) {\n        if (!even(List[i])) {\n            sum = sum + List[i];\n}\n    }\n    return sum;\n}\n</code></pre>"},{"title":"习题5-1 符号函数","url":"150.html","id":"150","date":"2018-10-02T15:24:00.000Z","_content":"\n本题要求实现符号函数sign(x)。\n\n### 函数接口定义：\n\n    int sign( int x );\n    \n\n其中`x`是用户传入的整型参数。符号函数的定义为：若`x`大于0，`sign(x)` = 1；若`x`等于0，`sign(x)` = 0；否则，`sign(x)` = −1。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int sign( int x );\n    \n    int main()\n    {\n        int x;\n    \n        scanf(\"%d\", &x);\n        printf(\"sign(%d) = %d\\n\", x, sign(x));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    10\n    \n\n### 输出样例：\n\n    sign(10) = 1\n    \n\n    int sign(int x) {\n    \tif (x > 0) {\n    \t\treturn 1;\n    \t}\n    \telse if (x == 0) {\n    \t\treturn 0;\n    \t}\n    \telse return -1;\n    }","source":"_posts/e4-b9-a0-e9-a2-985-1-e7-ac-a6-e5-8f-b7-e5-87-bd-e6-95-b0.md","raw":"---\ntitle: 习题5-1 符号函数\nurl: 150.html\nid: 150\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-02 23:24:00\ntags:\n---\n\n本题要求实现符号函数sign(x)。\n\n### 函数接口定义：\n\n    int sign( int x );\n    \n\n其中`x`是用户传入的整型参数。符号函数的定义为：若`x`大于0，`sign(x)` = 1；若`x`等于0，`sign(x)` = 0；否则，`sign(x)` = −1。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int sign( int x );\n    \n    int main()\n    {\n        int x;\n    \n        scanf(\"%d\", &x);\n        printf(\"sign(%d) = %d\\n\", x, sign(x));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    10\n    \n\n### 输出样例：\n\n    sign(10) = 1\n    \n\n    int sign(int x) {\n    \tif (x > 0) {\n    \t\treturn 1;\n    \t}\n    \telse if (x == 0) {\n    \t\treturn 0;\n    \t}\n    \telse return -1;\n    }","slug":"e4-b9-a0-e9-a2-985-1-e7-ac-a6-e5-8f-b7-e5-87-bd-e6-95-b0","published":1,"updated":"2018-12-18T12:25:32.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69m00067svzt5wobmxk","content":"<p>本题要求实现符号函数sign(x)。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int sign( int x );\n</code></pre><p>其中<code>x</code>是用户传入的整型参数。符号函数的定义为：若<code>x</code>大于0，<code>sign(x)</code> = 1；若<code>x</code>等于0，<code>sign(x)</code> = 0；否则，<code>sign(x)</code> = −1。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint sign( int x );\n\nint main()\n{\n    int x;\n\n    scanf(&quot;%d&quot;, &amp;x);\n    printf(&quot;sign(%d) = %d\\n&quot;, x, sign(x));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>10\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>sign(10) = 1\n\n\nint sign(int x) {\n    if (x &gt; 0) {\n        return 1;\n    }\n    else if (x == 0) {\n        return 0;\n    }\n    else return -1;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求实现符号函数sign(x)。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int sign( int x );\n</code></pre><p>其中<code>x</code>是用户传入的整型参数。符号函数的定义为：若<code>x</code>大于0，<code>sign(x)</code> = 1；若<code>x</code>等于0，<code>sign(x)</code> = 0；否则，<code>sign(x)</code> = −1。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint sign( int x );\n\nint main()\n{\n    int x;\n\n    scanf(&quot;%d&quot;, &amp;x);\n    printf(&quot;sign(%d) = %d\\n&quot;, x, sign(x));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>10\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>sign(10) = 1\n\n\nint sign(int x) {\n    if (x &gt; 0) {\n        return 1;\n    }\n    else if (x == 0) {\n        return 0;\n    }\n    else return -1;\n}\n</code></pre>"},{"title":"习题5-3 使用函数计算两点间的距离","url":"154.html","id":"154","date":"2018-10-03T01:15:50.000Z","_content":"\n本题要求实现一个函数，对给定平面任意两点坐标(x​1​​,y​1​​)和(x​2​​,y​2​​)，求这两点之间的距离。\n\n### 函数接口定义：\n\n    double dist( double x1, double y1, double x2, double y2 );\n    \n\n其中用户传入的参数为平面上两个点的坐标(`x1`, `y1`)和(`x2`, `y2`)，函数`dist`应返回两点间的距离。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    #include <math.h>\n    \n    double dist( double x1, double y1, double x2, double y2 );\n    \n    int main()\n    {    \n        double x1, y1, x2, y2;\n    \n        scanf(\"%lf %lf %lf %lf\", &x1, &y1, &x2, &y2);\n        printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    10 10 200 100\n    \n\n### 输出样例：\n\n    dist = 210.24\n    \n\n    double dist(double x1, double y1, double x2, double y2) {\n    \tdouble d;\n    \td = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n    \treturn d;\n    }","source":"_posts/e4-b9-a0-e9-a2-985-3-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e8-ae-a1-e7-ae-97-e4-b8-a4-e7-82-b9-e9-97-b4-e7-9a-84-e8-b7-9d-e7-a6-bb.md","raw":"---\ntitle: 习题5-3 使用函数计算两点间的距离\nurl: 154.html\nid: 154\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-03 09:15:50\ntags:\n---\n\n本题要求实现一个函数，对给定平面任意两点坐标(x​1​​,y​1​​)和(x​2​​,y​2​​)，求这两点之间的距离。\n\n### 函数接口定义：\n\n    double dist( double x1, double y1, double x2, double y2 );\n    \n\n其中用户传入的参数为平面上两个点的坐标(`x1`, `y1`)和(`x2`, `y2`)，函数`dist`应返回两点间的距离。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    #include <math.h>\n    \n    double dist( double x1, double y1, double x2, double y2 );\n    \n    int main()\n    {    \n        double x1, y1, x2, y2;\n    \n        scanf(\"%lf %lf %lf %lf\", &x1, &y1, &x2, &y2);\n        printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    10 10 200 100\n    \n\n### 输出样例：\n\n    dist = 210.24\n    \n\n    double dist(double x1, double y1, double x2, double y2) {\n    \tdouble d;\n    \td = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n    \treturn d;\n    }","slug":"e4-b9-a0-e9-a2-985-3-e4-bd-bf-e7-94-a8-e5-87-bd-e6-95-b0-e8-ae-a1-e7-ae-97-e4-b8-a4-e7-82-b9-e9-97-b4-e7-9a-84-e8-b7-9d-e7-a6-bb","published":1,"updated":"2018-12-18T12:25:32.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69o00087svzpwgdmkcv","content":"<p>本题要求实现一个函数，对给定平面任意两点坐标(x​1​​,y​1​​)和(x​2​​,y​2​​)，求这两点之间的距离。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>double dist( double x1, double y1, double x2, double y2 );\n</code></pre><p>其中用户传入的参数为平面上两个点的坐标(<code>x1</code>, <code>y1</code>)和(<code>x2</code>, <code>y2</code>)，函数<code>dist</code>应返回两点间的距离。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\ndouble dist( double x1, double y1, double x2, double y2 );\n\nint main()\n{    \n    double x1, y1, x2, y2;\n\n    scanf(&quot;%lf %lf %lf %lf&quot;, &amp;x1, &amp;y1, &amp;x2, &amp;y2);\n    printf(&quot;dist = %.2f\\n&quot;, dist(x1, y1, x2, y2));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>10 10 200 100\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>dist = 210.24\n\n\ndouble dist(double x1, double y1, double x2, double y2) {\n    double d;\n    d = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n    return d;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求实现一个函数，对给定平面任意两点坐标(x​1​​,y​1​​)和(x​2​​,y​2​​)，求这两点之间的距离。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>double dist( double x1, double y1, double x2, double y2 );\n</code></pre><p>其中用户传入的参数为平面上两个点的坐标(<code>x1</code>, <code>y1</code>)和(<code>x2</code>, <code>y2</code>)，函数<code>dist</code>应返回两点间的距离。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\ndouble dist( double x1, double y1, double x2, double y2 );\n\nint main()\n{    \n    double x1, y1, x2, y2;\n\n    scanf(&quot;%lf %lf %lf %lf&quot;, &amp;x1, &amp;y1, &amp;x2, &amp;y2);\n    printf(&quot;dist = %.2f\\n&quot;, dist(x1, y1, x2, y2));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>10 10 200 100\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>dist = 210.24\n\n\ndouble dist(double x1, double y1, double x2, double y2) {\n    double d;\n    d = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n    return d;\n}\n</code></pre>"},{"title":"基于PHP编写返回JSON数据的API接口","url":"61.html","id":"61","date":"2018-09-13T05:58:53.000Z","_content":"\n首先，配置PHP连接数据库的配置文件config/db.php\n\n    <?php\n    header('Content-Type: application/json');\n    header('Content-Type: text/html;charset=utf8');\n    $con=new mysqli(\"dbhost\",\"dbuser\",\"password\",\"dbname\");\n    if(!$con){\n        echo \"数据库连接失败！\";\n        echo $con->error;\n    }\n\n其次，以下为具体实现过程：\n\n    <?php\n    require \"config/db.php\";\n    $key=$_GET['key'];//设置API访问时的APP Key\n    if($key==\"XXX\") {\n    //验证APP Key，可以通过与数据库中保存的APP Key进行对比\n        $sql = \"SELECT * FROM dbtable\";\n        $result = $con->query($sql);\n        if (!$result) {\n            echo $con->error;\n        } else {\n            $arr = array();\n            while ($row = $result->fetch_assoc()) {\n                $count = count($row);//不能写到for循环里\n                for ($i = 0; $i < $count; $i++) {\n                    unset($row[$i]);\n                }\n                array_push($arr, $row);\n                //将获取的$row数据压入$arr数组中\n            }\n            print_r($arr);\n            echo \"<br/><hr>\";\n            echo json_encode($arr,JSON_UNESCAPED_UNICODE);\n            echo \"<br/>\";\n            $con->close();\n        }\n    }else{//APP Key验证不通过所返回的输出\n        ...\n    }\n\n此处仅输出了返回的JSON格式数据，可根据自己的需要输出返回状态码。","source":"_posts/e5-9f-ba-e4-ba-8ephp-e7-bc-96-e5-86-99-e8-bf-94-e5-9b-9ejson-e6-95-b0-e6-8d-ae-e7-9a-84api-e6-8e-a5-e5-8f-a3.md","raw":"---\ntitle: 基于PHP编写返回JSON数据的API接口\ntags:\n  - API\n  - PHP\nurl: 61.html\nid: 61\ncategories:\n  - PHP\ndate: 2018-09-13 13:58:53\n---\n\n首先，配置PHP连接数据库的配置文件config/db.php\n\n    <?php\n    header('Content-Type: application/json');\n    header('Content-Type: text/html;charset=utf8');\n    $con=new mysqli(\"dbhost\",\"dbuser\",\"password\",\"dbname\");\n    if(!$con){\n        echo \"数据库连接失败！\";\n        echo $con->error;\n    }\n\n其次，以下为具体实现过程：\n\n    <?php\n    require \"config/db.php\";\n    $key=$_GET['key'];//设置API访问时的APP Key\n    if($key==\"XXX\") {\n    //验证APP Key，可以通过与数据库中保存的APP Key进行对比\n        $sql = \"SELECT * FROM dbtable\";\n        $result = $con->query($sql);\n        if (!$result) {\n            echo $con->error;\n        } else {\n            $arr = array();\n            while ($row = $result->fetch_assoc()) {\n                $count = count($row);//不能写到for循环里\n                for ($i = 0; $i < $count; $i++) {\n                    unset($row[$i]);\n                }\n                array_push($arr, $row);\n                //将获取的$row数据压入$arr数组中\n            }\n            print_r($arr);\n            echo \"<br/><hr>\";\n            echo json_encode($arr,JSON_UNESCAPED_UNICODE);\n            echo \"<br/>\";\n            $con->close();\n        }\n    }else{//APP Key验证不通过所返回的输出\n        ...\n    }\n\n此处仅输出了返回的JSON格式数据，可根据自己的需要输出返回状态码。","slug":"e5-9f-ba-e4-ba-8ephp-e7-bc-96-e5-86-99-e8-bf-94-e5-9b-9ejson-e6-95-b0-e6-8d-ae-e7-9a-84api-e6-8e-a5-e5-8f-a3","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69q00097svzl9bd0535","content":"<p>首先，配置PHP连接数据库的配置文件config/db.php</p>\n<pre><code>&lt;?php\nheader(&apos;Content-Type: application/json&apos;);\nheader(&apos;Content-Type: text/html;charset=utf8&apos;);\n$con=new mysqli(&quot;dbhost&quot;,&quot;dbuser&quot;,&quot;password&quot;,&quot;dbname&quot;);\nif(!$con){\n    echo &quot;数据库连接失败！&quot;;\n    echo $con-&gt;error;\n}\n</code></pre><p>其次，以下为具体实现过程：</p>\n<pre><code>&lt;?php\nrequire &quot;config/db.php&quot;;\n$key=$_GET[&apos;key&apos;];//设置API访问时的APP Key\nif($key==&quot;XXX&quot;) {\n//验证APP Key，可以通过与数据库中保存的APP Key进行对比\n    $sql = &quot;SELECT * FROM dbtable&quot;;\n    $result = $con-&gt;query($sql);\n    if (!$result) {\n        echo $con-&gt;error;\n    } else {\n        $arr = array();\n        while ($row = $result-&gt;fetch_assoc()) {\n            $count = count($row);//不能写到for循环里\n            for ($i = 0; $i &lt; $count; $i++) {\n                unset($row[$i]);\n            }\n            array_push($arr, $row);\n            //将获取的$row数据压入$arr数组中\n        }\n        print_r($arr);\n        echo &quot;&lt;br/&gt;&lt;hr&gt;&quot;;\n        echo json_encode($arr,JSON_UNESCAPED_UNICODE);\n        echo &quot;&lt;br/&gt;&quot;;\n        $con-&gt;close();\n    }\n}else{//APP Key验证不通过所返回的输出\n    ...\n}\n</code></pre><p>此处仅输出了返回的JSON格式数据，可根据自己的需要输出返回状态码。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先，配置PHP连接数据库的配置文件config/db.php</p>\n<pre><code>&lt;?php\nheader(&apos;Content-Type: application/json&apos;);\nheader(&apos;Content-Type: text/html;charset=utf8&apos;);\n$con=new mysqli(&quot;dbhost&quot;,&quot;dbuser&quot;,&quot;password&quot;,&quot;dbname&quot;);\nif(!$con){\n    echo &quot;数据库连接失败！&quot;;\n    echo $con-&gt;error;\n}\n</code></pre><p>其次，以下为具体实现过程：</p>\n<pre><code>&lt;?php\nrequire &quot;config/db.php&quot;;\n$key=$_GET[&apos;key&apos;];//设置API访问时的APP Key\nif($key==&quot;XXX&quot;) {\n//验证APP Key，可以通过与数据库中保存的APP Key进行对比\n    $sql = &quot;SELECT * FROM dbtable&quot;;\n    $result = $con-&gt;query($sql);\n    if (!$result) {\n        echo $con-&gt;error;\n    } else {\n        $arr = array();\n        while ($row = $result-&gt;fetch_assoc()) {\n            $count = count($row);//不能写到for循环里\n            for ($i = 0; $i &lt; $count; $i++) {\n                unset($row[$i]);\n            }\n            array_push($arr, $row);\n            //将获取的$row数据压入$arr数组中\n        }\n        print_r($arr);\n        echo &quot;&lt;br/&gt;&lt;hr&gt;&quot;;\n        echo json_encode($arr,JSON_UNESCAPED_UNICODE);\n        echo &quot;&lt;br/&gt;&quot;;\n        $con-&gt;close();\n    }\n}else{//APP Key验证不通过所返回的输出\n    ...\n}\n</code></pre><p>此处仅输出了返回的JSON格式数据，可根据自己的需要输出返回状态码。</p>\n"},{"title":"练习5-1 求m到n之和","url":"143.html","id":"143","date":"2018-10-02T15:11:02.000Z","_content":"\n本题要求实现一个计算m~n（m<n）之间所有整数的和的简单函数。\n\n### 函数接口定义：\n\n    int sum( int m, int n );\n    \n\n其中`m`和`n`是用户传入的参数，保证有m<n。函数返回的是m~n之间所有整数的和。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int sum(int m, int n);\n    \n    int main()\n    {    \n        int m, n;\n    \n        scanf(\"%d %d\", &m, &n);\n        printf(\"sum = %d\\n\", sum(m, n));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    -5 8\n    \n\n### 输出样例：\n\n    sum = 21\n    \n\n    int sum(int m, int n) {\n    \tint i, sum = 0;\n    \tfor (i = m; i <= n; i++) {\n    \t\tsum = sum + i;\n    \t}\n    \treturn sum;\n    }","source":"_posts/e7-bb-83-e4-b9-a05-1-e6-b1-82m-e5-88-b0n-e4-b9-8b-e5-92-8c.md","raw":"---\ntitle: 练习5-1 求m到n之和\nurl: 143.html\nid: 143\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-02 23:11:02\ntags:\n---\n\n本题要求实现一个计算m~n（m<n）之间所有整数的和的简单函数。\n\n### 函数接口定义：\n\n    int sum( int m, int n );\n    \n\n其中`m`和`n`是用户传入的参数，保证有m<n。函数返回的是m~n之间所有整数的和。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int sum(int m, int n);\n    \n    int main()\n    {    \n        int m, n;\n    \n        scanf(\"%d %d\", &m, &n);\n        printf(\"sum = %d\\n\", sum(m, n));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    -5 8\n    \n\n### 输出样例：\n\n    sum = 21\n    \n\n    int sum(int m, int n) {\n    \tint i, sum = 0;\n    \tfor (i = m; i <= n; i++) {\n    \t\tsum = sum + i;\n    \t}\n    \treturn sum;\n    }","slug":"e7-bb-83-e4-b9-a05-1-e6-b1-82m-e5-88-b0n-e4-b9-8b-e5-92-8c","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69t000d7svzjciuzslj","content":"<p>本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int sum( int m, int n );\n</code></pre><p>其中<code>m</code>和<code>n</code>是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint sum(int m, int n);\n\nint main()\n{    \n    int m, n;\n\n    scanf(&quot;%d %d&quot;, &amp;m, &amp;n);\n    printf(&quot;sum = %d\\n&quot;, sum(m, n));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>-5 8\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>sum = 21\n\n\nint sum(int m, int n) {\n    int i, sum = 0;\n    for (i = m; i &lt;= n; i++) {\n        sum = sum + i;\n    }\n    return sum;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int sum( int m, int n );\n</code></pre><p>其中<code>m</code>和<code>n</code>是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint sum(int m, int n);\n\nint main()\n{    \n    int m, n;\n\n    scanf(&quot;%d %d&quot;, &amp;m, &amp;n);\n    printf(&quot;sum = %d\\n&quot;, sum(m, n));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>-5 8\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>sum = 21\n\n\nint sum(int m, int n) {\n    int i, sum = 0;\n    for (i = m; i &lt;= n; i++) {\n        sum = sum + i;\n    }\n    return sum;\n}\n</code></pre>"},{"title":"练习5-2 找两个数中最大者","url":"146.html","id":"146","date":"2018-10-02T15:14:18.000Z","_content":"\n本题要求对两个整数a和b，输出其中较大的数。\n\n### 函数接口定义：\n\n    int max( int a, int b );\n    \n\n其中`a`和`b`是用户传入的参数，函数返回的是两者中较大的数。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int max( int a, int b );\n    \n    int main()\n    {    \n        int a, b;\n    \n        scanf(\"%d %d\", &a, &b);\n        printf(\"max = %d\\n\", max(a, b));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    -5 8\n    \n\n### 输出样例：\n\n    max = 8\n    \n\n    int max(int a, int b) {\n    \tif (a > b) {\n    \t\treturn a;\n    \t}\n    \telse return b;\n    }","source":"_posts/e7-bb-83-e4-b9-a05-2-e6-89-be-e4-b8-a4-e4-b8-aa-e6-95-b0-e4-b8-ad-e6-9c-80-e5-a4-a7-e8-80-85.md","raw":"---\ntitle: 练习5-2 找两个数中最大者\nurl: 146.html\nid: 146\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-02 23:14:18\ntags:\n---\n\n本题要求对两个整数a和b，输出其中较大的数。\n\n### 函数接口定义：\n\n    int max( int a, int b );\n    \n\n其中`a`和`b`是用户传入的参数，函数返回的是两者中较大的数。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    int max( int a, int b );\n    \n    int main()\n    {    \n        int a, b;\n    \n        scanf(\"%d %d\", &a, &b);\n        printf(\"max = %d\\n\", max(a, b));\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    -5 8\n    \n\n### 输出样例：\n\n    max = 8\n    \n\n    int max(int a, int b) {\n    \tif (a > b) {\n    \t\treturn a;\n    \t}\n    \telse return b;\n    }","slug":"e7-bb-83-e4-b9-a05-2-e6-89-be-e4-b8-a4-e4-b8-aa-e6-95-b0-e4-b8-ad-e6-9c-80-e5-a4-a7-e8-80-85","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69v000f7svzsjp9nd15","content":"<p>本题要求对两个整数a和b，输出其中较大的数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int max( int a, int b );\n</code></pre><p>其中<code>a</code>和<code>b</code>是用户传入的参数，函数返回的是两者中较大的数。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint max( int a, int b );\n\nint main()\n{    \n    int a, b;\n\n    scanf(&quot;%d %d&quot;, &amp;a, &amp;b);\n    printf(&quot;max = %d\\n&quot;, max(a, b));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>-5 8\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>max = 8\n\n\nint max(int a, int b) {\n    if (a &gt; b) {\n        return a;\n    }\n    else return b;\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求对两个整数a和b，输出其中较大的数。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>int max( int a, int b );\n</code></pre><p>其中<code>a</code>和<code>b</code>是用户传入的参数，函数返回的是两者中较大的数。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nint max( int a, int b );\n\nint main()\n{    \n    int a, b;\n\n    scanf(&quot;%d %d&quot;, &amp;a, &amp;b);\n    printf(&quot;max = %d\\n&quot;, max(a, b));\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>-5 8\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>max = 8\n\n\nint max(int a, int b) {\n    if (a &gt; b) {\n        return a;\n    }\n    else return b;\n}\n</code></pre>"},{"title":"练习5-3 数字金字塔","url":"148.html","id":"148","date":"2018-10-02T15:21:35.000Z","_content":"\n本题要求实现函数输出n行数字金字塔。\n\n### 函数接口定义：\n\n    void pyramid( int n );\n    \n\n其中`n`是用户传入的参数，为\\[1, 9\\]的正整数。要求函数按照如样例所示的格式打印出`n`行数字金字塔。注\n\n意每个数字后面跟一个空格。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    void pyramid( int n );\n    \n    int main()\n    {    \n        int n;\n    \n        scanf(\"%d\", &n);\n        pyramid(n);\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    5\n    \n\n### 输出样例：\n\n        1 \n       2 2 \n      3 3 3 \n     4 4 4 4 \n    5 5 5 5 5 \n    \n\n    void pyramid(int n) {\n    \tint i;\n    \tint j;\n    \tfor (j = 1; j <= n; j++) {\n    \t\ti = n - j;\n    \t\twhile (i != 0) {\n    \t\t\tprintf(\" \");\n    \t\t\ti--;\n    \t\t}\n    \t\ti = j;\n    \t\twhile (i != 0) {\n    \t\t\tprintf(\"%d \", j);\n    \t\t\ti--;\n    \t\t}\n    \t\tprintf(\"\\n\");\n    \t}\n    }","source":"_posts/e7-bb-83-e4-b9-a05-3-e6-95-b0-e5-ad-97-e9-87-91-e5-ad-97-e5-a1-94.md","raw":"---\ntitle: 练习5-3 数字金字塔\nurl: 148.html\nid: 148\ncategories:\n  - 浙大版《C语言程序设计（第3版）》题目集\ndate: 2018-10-02 23:21:35\ntags:\n---\n\n本题要求实现函数输出n行数字金字塔。\n\n### 函数接口定义：\n\n    void pyramid( int n );\n    \n\n其中`n`是用户传入的参数，为\\[1, 9\\]的正整数。要求函数按照如样例所示的格式打印出`n`行数字金字塔。注\n\n意每个数字后面跟一个空格。\n\n### 裁判测试程序样例：\n\n    #include <stdio.h>\n    \n    void pyramid( int n );\n    \n    int main()\n    {    \n        int n;\n    \n        scanf(\"%d\", &n);\n        pyramid(n);\n    \n        return 0;\n    }\n    \n    /* 你的代码将被嵌在这里 */\n    \n\n### 输入样例：\n\n    5\n    \n\n### 输出样例：\n\n        1 \n       2 2 \n      3 3 3 \n     4 4 4 4 \n    5 5 5 5 5 \n    \n\n    void pyramid(int n) {\n    \tint i;\n    \tint j;\n    \tfor (j = 1; j <= n; j++) {\n    \t\ti = n - j;\n    \t\twhile (i != 0) {\n    \t\t\tprintf(\" \");\n    \t\t\ti--;\n    \t\t}\n    \t\ti = j;\n    \t\twhile (i != 0) {\n    \t\t\tprintf(\"%d \", j);\n    \t\t\ti--;\n    \t\t}\n    \t\tprintf(\"\\n\");\n    \t}\n    }","slug":"e7-bb-83-e4-b9-a05-3-e6-95-b0-e5-ad-97-e9-87-91-e5-ad-97-e5-a1-94","published":1,"updated":"2018-12-18T12:25:32.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt69x000j7svzpwdewtar","content":"<p>本题要求实现函数输出n行数字金字塔。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>void pyramid( int n );\n</code></pre><p>其中<code>n</code>是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出<code>n</code>行数字金字塔。注</p>\n<p>意每个数字后面跟一个空格。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nvoid pyramid( int n );\n\nint main()\n{    \n    int n;\n\n    scanf(&quot;%d&quot;, &amp;n);\n    pyramid(n);\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>5\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>    1 \n   2 2 \n  3 3 3 \n 4 4 4 4 \n5 5 5 5 5 \n\n\nvoid pyramid(int n) {\n    int i;\n    int j;\n    for (j = 1; j &lt;= n; j++) {\n        i = n - j;\n        while (i != 0) {\n            printf(&quot; &quot;);\n            i--;\n        }\n        i = j;\n        while (i != 0) {\n            printf(&quot;%d &quot;, j);\n            i--;\n        }\n        printf(&quot;\\n&quot;);\n    }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>本题要求实现函数输出n行数字金字塔。</p>\n<h3 id=\"函数接口定义：\"><a href=\"#函数接口定义：\" class=\"headerlink\" title=\"函数接口定义：\"></a>函数接口定义：</h3><pre><code>void pyramid( int n );\n</code></pre><p>其中<code>n</code>是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出<code>n</code>行数字金字塔。注</p>\n<p>意每个数字后面跟一个空格。</p>\n<h3 id=\"裁判测试程序样例：\"><a href=\"#裁判测试程序样例：\" class=\"headerlink\" title=\"裁判测试程序样例：\"></a>裁判测试程序样例：</h3><pre><code>#include &lt;stdio.h&gt;\n\nvoid pyramid( int n );\n\nint main()\n{    \n    int n;\n\n    scanf(&quot;%d&quot;, &amp;n);\n    pyramid(n);\n\n    return 0;\n}\n\n/* 你的代码将被嵌在这里 */\n</code></pre><h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><pre><code>5\n</code></pre><h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><pre><code>    1 \n   2 2 \n  3 3 3 \n 4 4 4 4 \n5 5 5 5 5 \n\n\nvoid pyramid(int n) {\n    int i;\n    int j;\n    for (j = 1; j &lt;= n; j++) {\n        i = n - j;\n        while (i != 0) {\n            printf(&quot; &quot;);\n            i--;\n        }\n        i = j;\n        while (i != 0) {\n            printf(&quot;%d &quot;, j);\n            i--;\n        }\n        printf(&quot;\\n&quot;);\n    }\n}\n</code></pre>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-12-17T15:26:48.404Z","updated":"2017-10-28T00:39:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6a1000l7svzndix2rk3","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"PAT每日一题|1001 A+B Format","url":"121.html","id":"121","date":"2018-09-29T01:41:46.000Z","_content":"\nCalculate a+b and output the sum in standard format -- that is, the digits must be separated into groups of three by commas (unless there are less than four digits).\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a pair of integers a and b where −10​6​​≤a,b≤10​6​​. The numbers are separated by a space.\n\n### Output Specification:\n\nFor each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.\n\n### Sample Input:\n\n    -1000000 9\n    \n\n### Sample Output:\n\n    -999,991\n    \n\n    #include <stdio.h>\n    #include <math.h>\n    #include <stdlib.h>\n    int sum(int a, int b) {\n    \treturn a + b;\n    }\n    \n    int main() {\n    \tint a=0, b=0, s;\n    \tint i = 1000, j = 0;\n    \tint result[9] = { 0 };\n    \tscanf(\"%d%d\", &a, &b);\n    \ts = sum(a, b);\n    \twhile (s / i != 0) {\n    \t\tresult[j] = s % i;\n    \t\ts=s/1000;\n    \t\tj++;\n    \t}\n    \tresult[j] = s % i;\n    \tfor (i = j ; i >= 0; i--) {\n    \t\tif (i != j) {\n    \t\t\tresult[i] = abs(result[i]);\n    \n    \t\t\tif (result[i] == 0) {\n    \t\t\t\tprintf(\"000\");\n    \t\t\t}\n    \t\t\telse if (result[i] > 0 && result[i] < 10) {\n    \t\t\t\tprintf(\"00%d\", result[i]);\n    \t\t\t}\n    \t\t\telse if (result[i] >= 10 && result[i] < 100) {\n    \t\t\t\tprintf(\"0%d\", result[i]);\n    \t\t\t}\n    \t\t\telse {\n    \t\t\t\tprintf(\"%d\", result[i]);\n    \t\t\t}\n    \t\t}\n    \t\telse printf(\"%d\", result[i]);\n    \t\tif (i != 0) {\n    \t\t\tprintf(\",\");\n    \t\t}\n    \t}\n    }","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981001-ab-format.md","raw":"---\ntitle: PAT每日一题|1001 A+B Format\nurl: 121.html\nid: 121\ncategories:\n  - PAT\ndate: 2018-09-29 09:41:46\ntags:\n---\n\nCalculate a+b and output the sum in standard format -- that is, the digits must be separated into groups of three by commas (unless there are less than four digits).\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a pair of integers a and b where −10​6​​≤a,b≤10​6​​. The numbers are separated by a space.\n\n### Output Specification:\n\nFor each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.\n\n### Sample Input:\n\n    -1000000 9\n    \n\n### Sample Output:\n\n    -999,991\n    \n\n    #include <stdio.h>\n    #include <math.h>\n    #include <stdlib.h>\n    int sum(int a, int b) {\n    \treturn a + b;\n    }\n    \n    int main() {\n    \tint a=0, b=0, s;\n    \tint i = 1000, j = 0;\n    \tint result[9] = { 0 };\n    \tscanf(\"%d%d\", &a, &b);\n    \ts = sum(a, b);\n    \twhile (s / i != 0) {\n    \t\tresult[j] = s % i;\n    \t\ts=s/1000;\n    \t\tj++;\n    \t}\n    \tresult[j] = s % i;\n    \tfor (i = j ; i >= 0; i--) {\n    \t\tif (i != j) {\n    \t\t\tresult[i] = abs(result[i]);\n    \n    \t\t\tif (result[i] == 0) {\n    \t\t\t\tprintf(\"000\");\n    \t\t\t}\n    \t\t\telse if (result[i] > 0 && result[i] < 10) {\n    \t\t\t\tprintf(\"00%d\", result[i]);\n    \t\t\t}\n    \t\t\telse if (result[i] >= 10 && result[i] < 100) {\n    \t\t\t\tprintf(\"0%d\", result[i]);\n    \t\t\t}\n    \t\t\telse {\n    \t\t\t\tprintf(\"%d\", result[i]);\n    \t\t\t}\n    \t\t}\n    \t\telse printf(\"%d\", result[i]);\n    \t\tif (i != 0) {\n    \t\t\tprintf(\",\");\n    \t\t}\n    \t}\n    }","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981001-ab-format","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6a5000o7svzrt85b72k","content":"<p>Calculate a+b and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a pair of integers a and b where −10​6​​≤a,b≤10​6​​. The numbers are separated by a space.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>-1000000 9\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>-999,991\n\n\n#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;stdlib.h&gt;\nint sum(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int a=0, b=0, s;\n    int i = 1000, j = 0;\n    int result[9] = { 0 };\n    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);\n    s = sum(a, b);\n    while (s / i != 0) {\n        result[j] = s % i;\n        s=s/1000;\n        j++;\n    }\n    result[j] = s % i;\n    for (i = j ; i &gt;= 0; i--) {\n        if (i != j) {\n            result[i] = abs(result[i]);\n\n            if (result[i] == 0) {\n                printf(&quot;000&quot;);\n            }\n            else if (result[i] &gt; 0 &amp;&amp; result[i] &lt; 10) {\n                printf(&quot;00%d&quot;, result[i]);\n            }\n            else if (result[i] &gt;= 10 &amp;&amp; result[i] &lt; 100) {\n                printf(&quot;0%d&quot;, result[i]);\n            }\n            else {\n                printf(&quot;%d&quot;, result[i]);\n            }\n        }\n        else printf(&quot;%d&quot;, result[i]);\n        if (i != 0) {\n            printf(&quot;,&quot;);\n        }\n    }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>Calculate a+b and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a pair of integers a and b where −10​6​​≤a,b≤10​6​​. The numbers are separated by a space.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>-1000000 9\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>-999,991\n\n\n#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;stdlib.h&gt;\nint sum(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int a=0, b=0, s;\n    int i = 1000, j = 0;\n    int result[9] = { 0 };\n    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);\n    s = sum(a, b);\n    while (s / i != 0) {\n        result[j] = s % i;\n        s=s/1000;\n        j++;\n    }\n    result[j] = s % i;\n    for (i = j ; i &gt;= 0; i--) {\n        if (i != j) {\n            result[i] = abs(result[i]);\n\n            if (result[i] == 0) {\n                printf(&quot;000&quot;);\n            }\n            else if (result[i] &gt; 0 &amp;&amp; result[i] &lt; 10) {\n                printf(&quot;00%d&quot;, result[i]);\n            }\n            else if (result[i] &gt;= 10 &amp;&amp; result[i] &lt; 100) {\n                printf(&quot;0%d&quot;, result[i]);\n            }\n            else {\n                printf(&quot;%d&quot;, result[i]);\n            }\n        }\n        else printf(&quot;%d&quot;, result[i]);\n        if (i != 0) {\n            printf(&quot;,&quot;);\n        }\n    }\n}\n</code></pre>"},{"title":"PAT每日一题|1002 A+B for Polynomials","url":"128.html","id":"128","date":"2018-09-30T02:12:19.000Z","_content":"\nThis time, you are supposed to find A+B where A and B are two polynomials.\n\n### Input Specification:\n\nEach input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:\n\nK N​1​​ a​N​1​​​​ N​2​​ a​N​2​​​​ ... N​K​​ a​N​K​​​​\n\nwhere K is the number of nonzero terms in the polynomial, N​i​​ and a​N​i​​​​ (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤N​K​​<⋯<N​2​​<N​1​​≤1000.\n\n### Output Specification:\n\nFor each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.\n\n### Sample Input:\n\n    2 1 2.4 0 3.2\n    2 2 1.5 1 0.5\n    \n\n### Sample Output:\n\n    3 2 1.5 1 2.9 0 3.2\n    \n\n#### 正确：\n\n    #include <stdio.h>\n    int main() {\n    \tfloat coe[1001] = { 0.0 };\n    \tint a, b, i, m,num=0;\n    \tfloat n;\n    \tscanf(\"%d\", &a);\n    \tfor (i = 0; i < a; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tscanf(\"%d\", &b);\n    \tfor (i = 0; i < b; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tnum++;\n    \t\t}\n    \t}\n    \tprintf(\"%d\", num);\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tprintf(\" %d %.1f\", i, coe[i]);\n    \t\t}\n    \t}\n    }\n\n#### 错误：\n\n    #include <stdio.h>\n    int main() {\n    \tfloat coe[1001] = { 0.0 };\n    \tint a, b, i, m,num=0;\n    \tfloat n;\n    \tscanf(\"%d\", &a);\n    \tfor (i = 0; i < a; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tif (coe[m] == 0.0) num++;\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tscanf(\"%d\", &b);\n    \tfor (i = 0; i < b; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tif (coe[m] == 0.0) num++;\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tprintf(\"%d\", num);\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tprintf(\" %d %.1f\", i, coe[i]);\n    \t\t}\n    \t}\n    }","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981002-ab-for-polynomials.md","raw":"---\ntitle: PAT每日一题|1002 A+B for Polynomials\nurl: 128.html\nid: 128\ncategories:\n  - PAT\ndate: 2018-09-30 10:12:19\ntags:\n---\n\nThis time, you are supposed to find A+B where A and B are two polynomials.\n\n### Input Specification:\n\nEach input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:\n\nK N​1​​ a​N​1​​​​ N​2​​ a​N​2​​​​ ... N​K​​ a​N​K​​​​\n\nwhere K is the number of nonzero terms in the polynomial, N​i​​ and a​N​i​​​​ (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤N​K​​<⋯<N​2​​<N​1​​≤1000.\n\n### Output Specification:\n\nFor each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.\n\n### Sample Input:\n\n    2 1 2.4 0 3.2\n    2 2 1.5 1 0.5\n    \n\n### Sample Output:\n\n    3 2 1.5 1 2.9 0 3.2\n    \n\n#### 正确：\n\n    #include <stdio.h>\n    int main() {\n    \tfloat coe[1001] = { 0.0 };\n    \tint a, b, i, m,num=0;\n    \tfloat n;\n    \tscanf(\"%d\", &a);\n    \tfor (i = 0; i < a; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tscanf(\"%d\", &b);\n    \tfor (i = 0; i < b; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tnum++;\n    \t\t}\n    \t}\n    \tprintf(\"%d\", num);\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tprintf(\" %d %.1f\", i, coe[i]);\n    \t\t}\n    \t}\n    }\n\n#### 错误：\n\n    #include <stdio.h>\n    int main() {\n    \tfloat coe[1001] = { 0.0 };\n    \tint a, b, i, m,num=0;\n    \tfloat n;\n    \tscanf(\"%d\", &a);\n    \tfor (i = 0; i < a; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tif (coe[m] == 0.0) num++;\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tscanf(\"%d\", &b);\n    \tfor (i = 0; i < b; i++) {\n    \t\tscanf(\"%d%f\", &m,&n);\n    \t\tif (coe[m] == 0.0) num++;\n    \t\tcoe[m] = coe[m] + n;\n    \t}\n    \tprintf(\"%d\", num);\n    \tfor (i = 1000; i >= 0; i--) {\n    \t\tif (coe[i] != 0.0) {\n    \t\t\tprintf(\" %d %.1f\", i, coe[i]);\n    \t\t}\n    \t}\n    }","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981002-ab-for-polynomials","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6a8000r7svz9xgqxai2","content":"<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p>\n<p>K N​1​​ a​N​1​​​​ N​2​​ a​N​2​​​​ … N​K​​ a​N​K​​​​</p>\n<p>where K is the number of nonzero terms in the polynomial, N​i​​ and a​N​i​​​​ (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤N​K​​&lt;⋯&lt;N​2​​&lt;N​1​​≤1000.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>2 1 2.4 0 3.2\n2 2 1.5 1 0.5\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>3 2 1.5 1 2.9 0 3.2\n</code></pre><h4 id=\"正确：\"><a href=\"#正确：\" class=\"headerlink\" title=\"正确：\"></a>正确：</h4><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    float coe[1001] = { 0.0 };\n    int a, b, i, m,num=0;\n    float n;\n    scanf(&quot;%d&quot;, &amp;a);\n    for (i = 0; i &lt; a; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        coe[m] = coe[m] + n;\n    }\n    scanf(&quot;%d&quot;, &amp;b);\n    for (i = 0; i &lt; b; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        coe[m] = coe[m] + n;\n    }\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            num++;\n        }\n    }\n    printf(&quot;%d&quot;, num);\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            printf(&quot; %d %.1f&quot;, i, coe[i]);\n        }\n    }\n}\n</code></pre><h4 id=\"错误：\"><a href=\"#错误：\" class=\"headerlink\" title=\"错误：\"></a>错误：</h4><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    float coe[1001] = { 0.0 };\n    int a, b, i, m,num=0;\n    float n;\n    scanf(&quot;%d&quot;, &amp;a);\n    for (i = 0; i &lt; a; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        if (coe[m] == 0.0) num++;\n        coe[m] = coe[m] + n;\n    }\n    scanf(&quot;%d&quot;, &amp;b);\n    for (i = 0; i &lt; b; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        if (coe[m] == 0.0) num++;\n        coe[m] = coe[m] + n;\n    }\n    printf(&quot;%d&quot;, num);\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            printf(&quot; %d %.1f&quot;, i, coe[i]);\n        }\n    }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p>\n<p>K N​1​​ a​N​1​​​​ N​2​​ a​N​2​​​​ … N​K​​ a​N​K​​​​</p>\n<p>where K is the number of nonzero terms in the polynomial, N​i​​ and a​N​i​​​​ (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤N​K​​&lt;⋯&lt;N​2​​&lt;N​1​​≤1000.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>2 1 2.4 0 3.2\n2 2 1.5 1 0.5\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>3 2 1.5 1 2.9 0 3.2\n</code></pre><h4 id=\"正确：\"><a href=\"#正确：\" class=\"headerlink\" title=\"正确：\"></a>正确：</h4><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    float coe[1001] = { 0.0 };\n    int a, b, i, m,num=0;\n    float n;\n    scanf(&quot;%d&quot;, &amp;a);\n    for (i = 0; i &lt; a; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        coe[m] = coe[m] + n;\n    }\n    scanf(&quot;%d&quot;, &amp;b);\n    for (i = 0; i &lt; b; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        coe[m] = coe[m] + n;\n    }\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            num++;\n        }\n    }\n    printf(&quot;%d&quot;, num);\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            printf(&quot; %d %.1f&quot;, i, coe[i]);\n        }\n    }\n}\n</code></pre><h4 id=\"错误：\"><a href=\"#错误：\" class=\"headerlink\" title=\"错误：\"></a>错误：</h4><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    float coe[1001] = { 0.0 };\n    int a, b, i, m,num=0;\n    float n;\n    scanf(&quot;%d&quot;, &amp;a);\n    for (i = 0; i &lt; a; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        if (coe[m] == 0.0) num++;\n        coe[m] = coe[m] + n;\n    }\n    scanf(&quot;%d&quot;, &amp;b);\n    for (i = 0; i &lt; b; i++) {\n        scanf(&quot;%d%f&quot;, &amp;m,&amp;n);\n        if (coe[m] == 0.0) num++;\n        coe[m] = coe[m] + n;\n    }\n    printf(&quot;%d&quot;, num);\n    for (i = 1000; i &gt;= 0; i--) {\n        if (coe[i] != 0.0) {\n            printf(&quot; %d %.1f&quot;, i, coe[i]);\n        }\n    }\n}\n</code></pre>"},{"title":"PAT每日一题|1008 Elevator","url":"135.html","id":"135","date":"2018-10-02T01:59:23.000Z","_content":"\nThe highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.\n\nFor a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.\n\n### Output Specification:\n\nFor each test case, print the total time on a single line.\n\n### Sample Input:\n\n    3 2 3 1\n    \n\n### Sample Output:\n\n    41\n    \n\n    #include <stdio.h>\n    int main() {\n    \tint n,time=0;\n    \tint i,now=0;\n    \tint floor[100];\n    \tscanf(\"%d\", &n);\n    \tfor (i = 0; i < n; i++) {\n    \t\tscanf(\"%d\", &floor[i]);\n    \t}\n    \ttime = time + n * 5;\n    \tfor (i = 0; i < n; i++) {\n    \t\tif (floor[i] - now > 0) {\n    \t\t\ttime = time + (floor[i] - now) * 6;\n    \t\t}\n    \t\telse if (floor[i] - now < 0) {\n    \t\t\ttime = time + (now - floor[i]) * 4;\n    \t\t}\n    \t\tnow = floor[i];\n    \t}\n    \tprintf(\"%d\", time);\n    }","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981008-elevator.md","raw":"---\ntitle: PAT每日一题|1008 Elevator\nurl: 135.html\nid: 135\ncategories:\n  - PAT\ndate: 2018-10-02 09:59:23\ntags:\n---\n\nThe highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.\n\nFor a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.\n\n### Output Specification:\n\nFor each test case, print the total time on a single line.\n\n### Sample Input:\n\n    3 2 3 1\n    \n\n### Sample Output:\n\n    41\n    \n\n    #include <stdio.h>\n    int main() {\n    \tint n,time=0;\n    \tint i,now=0;\n    \tint floor[100];\n    \tscanf(\"%d\", &n);\n    \tfor (i = 0; i < n; i++) {\n    \t\tscanf(\"%d\", &floor[i]);\n    \t}\n    \ttime = time + n * 5;\n    \tfor (i = 0; i < n; i++) {\n    \t\tif (floor[i] - now > 0) {\n    \t\t\ttime = time + (floor[i] - now) * 6;\n    \t\t}\n    \t\telse if (floor[i] - now < 0) {\n    \t\t\ttime = time + (now - floor[i]) * 4;\n    \t\t}\n    \t\tnow = floor[i];\n    \t}\n    \tprintf(\"%d\", time);\n    }","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981008-elevator","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6aa000v7svzqq5cjadz","content":"<p>The highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.</p>\n<p>For a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print the total time on a single line.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>3 2 3 1\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>41\n\n\n#include &lt;stdio.h&gt;\nint main() {\n    int n,time=0;\n    int i,now=0;\n    int floor[100];\n    scanf(&quot;%d&quot;, &amp;n);\n    for (i = 0; i &lt; n; i++) {\n        scanf(&quot;%d&quot;, &amp;floor[i]);\n    }\n    time = time + n * 5;\n    for (i = 0; i &lt; n; i++) {\n        if (floor[i] - now &gt; 0) {\n            time = time + (floor[i] - now) * 6;\n        }\n        else if (floor[i] - now &lt; 0) {\n            time = time + (now - floor[i]) * 4;\n        }\n        now = floor[i];\n    }\n    printf(&quot;%d&quot;, time);\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>The highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.</p>\n<p>For a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print the total time on a single line.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>3 2 3 1\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>41\n\n\n#include &lt;stdio.h&gt;\nint main() {\n    int n,time=0;\n    int i,now=0;\n    int floor[100];\n    scanf(&quot;%d&quot;, &amp;n);\n    for (i = 0; i &lt; n; i++) {\n        scanf(&quot;%d&quot;, &amp;floor[i]);\n    }\n    time = time + n * 5;\n    for (i = 0; i &lt; n; i++) {\n        if (floor[i] - now &gt; 0) {\n            time = time + (floor[i] - now) * 6;\n        }\n        else if (floor[i] - now &lt; 0) {\n            time = time + (now - floor[i]) * 4;\n        }\n        now = floor[i];\n    }\n    printf(&quot;%d&quot;, time);\n}\n</code></pre>"},{"title":"PAT每日一题|1005 Spell It Right","url":"132.html","id":"132","date":"2018-10-02T01:19:38.000Z","_content":"\nGiven a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.\n\n### Input Specification:\n\nEach input file contains one test case. Each case occupies one line which contains an N (≤10​100​​).\n\n### Output Specification:\n\nFor each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.\n\n### Sample Input:\n\n    12345\n    \n\n### Sample Output:\n\n    one five\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tint n, i = 0;\n    \tint j, sum = 0;\n    \tchar d[110];\n    \tchar d1[10][10]={\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    \tint result[100];\n    \tscanf(\"%s\", d);\n    \tn = strlen(d);\n    \tfor (i = 0; i < n; i++) {\n    \t\tsum = d[i] - '0'+sum;\n    \t}\n    \tj = 0;\n    \t\tif(sum==0){\n    \t  printf(\"zero\");\n    \t  \n    \t}else{\n    \twhile (sum != 0) {\n    \t\tresult[j] = sum % 10;\n    \t\tsum = sum / 10;\n    \t\tj++;\n    \t}\n    \n    \tfor (i = j - 1; i >= 0; i--) {\n    \t\tprintf(\"%s\",d1[result[i]]);\n    \t\tif (i != 0) {\n    \t\t\tprintf(\" \");\n    \t\t}\n    \t}\n    }\n    }\n\n注意：考虑输入仅为0的情况","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981005-spell-it-right.md","raw":"---\ntitle: PAT每日一题|1005 Spell It Right\nurl: 132.html\nid: 132\ncategories:\n  - PAT\ndate: 2018-10-02 09:19:38\ntags:\n---\n\nGiven a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.\n\n### Input Specification:\n\nEach input file contains one test case. Each case occupies one line which contains an N (≤10​100​​).\n\n### Output Specification:\n\nFor each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.\n\n### Sample Input:\n\n    12345\n    \n\n### Sample Output:\n\n    one five\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tint n, i = 0;\n    \tint j, sum = 0;\n    \tchar d[110];\n    \tchar d1[10][10]={\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    \tint result[100];\n    \tscanf(\"%s\", d);\n    \tn = strlen(d);\n    \tfor (i = 0; i < n; i++) {\n    \t\tsum = d[i] - '0'+sum;\n    \t}\n    \tj = 0;\n    \t\tif(sum==0){\n    \t  printf(\"zero\");\n    \t  \n    \t}else{\n    \twhile (sum != 0) {\n    \t\tresult[j] = sum % 10;\n    \t\tsum = sum / 10;\n    \t\tj++;\n    \t}\n    \n    \tfor (i = j - 1; i >= 0; i--) {\n    \t\tprintf(\"%s\",d1[result[i]]);\n    \t\tif (i != 0) {\n    \t\t\tprintf(\" \");\n    \t\t}\n    \t}\n    }\n    }\n\n注意：考虑输入仅为0的情况","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981005-spell-it-right","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6ac000y7svz5s7m5tdl","content":"<p>Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies one line which contains an N (≤10​100​​).</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>12345\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>one five\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    int n, i = 0;\n    int j, sum = 0;\n    char d[110];\n    char d1[10][10]={&quot;zero&quot;,&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,&quot;four&quot;,&quot;five&quot;,&quot;six&quot;,&quot;seven&quot;,&quot;eight&quot;,&quot;nine&quot;};\n    int result[100];\n    scanf(&quot;%s&quot;, d);\n    n = strlen(d);\n    for (i = 0; i &lt; n; i++) {\n        sum = d[i] - &apos;0&apos;+sum;\n    }\n    j = 0;\n        if(sum==0){\n      printf(&quot;zero&quot;);\n\n    }else{\n    while (sum != 0) {\n        result[j] = sum % 10;\n        sum = sum / 10;\n        j++;\n    }\n\n    for (i = j - 1; i &gt;= 0; i--) {\n        printf(&quot;%s&quot;,d1[result[i]]);\n        if (i != 0) {\n            printf(&quot; &quot;);\n        }\n    }\n}\n}\n</code></pre><p>注意：考虑输入仅为0的情况</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies one line which contains an N (≤10​100​​).</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>12345\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>one five\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    int n, i = 0;\n    int j, sum = 0;\n    char d[110];\n    char d1[10][10]={&quot;zero&quot;,&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,&quot;four&quot;,&quot;five&quot;,&quot;six&quot;,&quot;seven&quot;,&quot;eight&quot;,&quot;nine&quot;};\n    int result[100];\n    scanf(&quot;%s&quot;, d);\n    n = strlen(d);\n    for (i = 0; i &lt; n; i++) {\n        sum = d[i] - &apos;0&apos;+sum;\n    }\n    j = 0;\n        if(sum==0){\n      printf(&quot;zero&quot;);\n\n    }else{\n    while (sum != 0) {\n        result[j] = sum % 10;\n        sum = sum / 10;\n        j++;\n    }\n\n    for (i = j - 1; i &gt;= 0; i--) {\n        printf(&quot;%s&quot;,d1[result[i]]);\n        if (i != 0) {\n            printf(&quot; &quot;);\n        }\n    }\n}\n}\n</code></pre><p>注意：考虑输入仅为0的情况</p>\n"},{"title":"PAT每日一题|1011 World Cup Betting","url":"137.html","id":"137","date":"2018-10-02T03:06:13.000Z","_content":"\nWith the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.\n\nChinese Football Lottery provided a \"Triple Winning\" game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results -- namely `W` for win, `T` for tie, and `L` for lose. There was an odd assigned to each result. The winner's odd would be the product of the three odds times 65%.\n\nFor example, 3 games' odds are given as the following:\n\n     W    T    L\n    1.1  2.5  1.7\n    1.2  3.1  1.6\n    4.1  1.2  1.1\n    \n\nTo obtain the maximum profit, one must buy `W` for the 3rd game, `T` for the 2nd game, and `T` for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to `W`, `T` and `L`.\n\n### Output Specification:\n\nFor each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.\n\n### Sample Input:\n\n    1.1 2.5 1.7\n    1.2 3.1 1.6\n    4.1 1.2 1.1\n    \n\n### Sample Output:\n\n    T T W 39.31\n    \n\n    #include <stdio.h>\n    \n    int main() {\n    \tdouble bet[3][3];\n    \tint i, j;\n    \tdouble max[3],sum;\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tscanf(\"%lf\", &bet[i][j]);\n    \t\t}\n    \t\tmax[i] = bet[i][0];\n    \t}\n    \t\n    \t\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tif (max[i] < bet[i][j]) {\n    \t\t\t\tmax[i] = bet[i][j];\n    \t\t\t}\n    \t\t}\n    \t}\n    \tsum = (max[0] * max[1] * max[2] * 0.65 - 1) * 2;\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tif (max[i] == bet[i][j]) {\n    \t\t\t\tif (j == 0) printf(\"W \");\n    \t\t\t\telse if (j == 1)printf(\"T \");\n    \t\t\t\telse printf(\"L \");\n    \t\t\t}\n    \t\t}\n    \t}\n    \tprintf(\"%.2lf\", sum);\n    }","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981011-world-cup-betting.md","raw":"---\ntitle: PAT每日一题|1011 World Cup Betting\nurl: 137.html\nid: 137\ncategories:\n  - PAT\ndate: 2018-10-02 11:06:13\ntags:\n---\n\nWith the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.\n\nChinese Football Lottery provided a \"Triple Winning\" game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results -- namely `W` for win, `T` for tie, and `L` for lose. There was an odd assigned to each result. The winner's odd would be the product of the three odds times 65%.\n\nFor example, 3 games' odds are given as the following:\n\n     W    T    L\n    1.1  2.5  1.7\n    1.2  3.1  1.6\n    4.1  1.2  1.1\n    \n\nTo obtain the maximum profit, one must buy `W` for the 3rd game, `T` for the 2nd game, and `T` for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to `W`, `T` and `L`.\n\n### Output Specification:\n\nFor each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.\n\n### Sample Input:\n\n    1.1 2.5 1.7\n    1.2 3.1 1.6\n    4.1 1.2 1.1\n    \n\n### Sample Output:\n\n    T T W 39.31\n    \n\n    #include <stdio.h>\n    \n    int main() {\n    \tdouble bet[3][3];\n    \tint i, j;\n    \tdouble max[3],sum;\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tscanf(\"%lf\", &bet[i][j]);\n    \t\t}\n    \t\tmax[i] = bet[i][0];\n    \t}\n    \t\n    \t\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tif (max[i] < bet[i][j]) {\n    \t\t\t\tmax[i] = bet[i][j];\n    \t\t\t}\n    \t\t}\n    \t}\n    \tsum = (max[0] * max[1] * max[2] * 0.65 - 1) * 2;\n    \tfor (i = 0; i < 3; i++) {\n    \t\tfor (j = 0; j < 3; j++) {\n    \t\t\tif (max[i] == bet[i][j]) {\n    \t\t\t\tif (j == 0) printf(\"W \");\n    \t\t\t\telse if (j == 1)printf(\"T \");\n    \t\t\t\telse printf(\"L \");\n    \t\t\t}\n    \t\t}\n    \t}\n    \tprintf(\"%.2lf\", sum);\n    }","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981011-world-cup-betting","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6ae00107svz48ts2dox","content":"<p>With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.</p>\n<p>Chinese Football Lottery provided a “Triple Winning” game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results – namely <code>W</code> for win, <code>T</code> for tie, and <code>L</code> for lose. There was an odd assigned to each result. The winner’s odd would be the product of the three odds times 65%.</p>\n<p>For example, 3 games’ odds are given as the following:</p>\n<pre><code> W    T    L\n1.1  2.5  1.7\n1.2  3.1  1.6\n4.1  1.2  1.1\n</code></pre><p>To obtain the maximum profit, one must buy <code>W</code> for the 3rd game, <code>T</code> for the 2nd game, and <code>T</code> for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to <code>W</code>, <code>T</code> and <code>L</code>.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>1.1 2.5 1.7\n1.2 3.1 1.6\n4.1 1.2 1.1\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>T T W 39.31\n\n\n#include &lt;stdio.h&gt;\n\nint main() {\n    double bet[3][3];\n    int i, j;\n    double max[3],sum;\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            scanf(&quot;%lf&quot;, &amp;bet[i][j]);\n        }\n        max[i] = bet[i][0];\n    }\n\n\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            if (max[i] &lt; bet[i][j]) {\n                max[i] = bet[i][j];\n            }\n        }\n    }\n    sum = (max[0] * max[1] * max[2] * 0.65 - 1) * 2;\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            if (max[i] == bet[i][j]) {\n                if (j == 0) printf(&quot;W &quot;);\n                else if (j == 1)printf(&quot;T &quot;);\n                else printf(&quot;L &quot;);\n            }\n        }\n    }\n    printf(&quot;%.2lf&quot;, sum);\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.</p>\n<p>Chinese Football Lottery provided a “Triple Winning” game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results – namely <code>W</code> for win, <code>T</code> for tie, and <code>L</code> for lose. There was an odd assigned to each result. The winner’s odd would be the product of the three odds times 65%.</p>\n<p>For example, 3 games’ odds are given as the following:</p>\n<pre><code> W    T    L\n1.1  2.5  1.7\n1.2  3.1  1.6\n4.1  1.2  1.1\n</code></pre><p>To obtain the maximum profit, one must buy <code>W</code> for the 3rd game, <code>T</code> for the 2nd game, and <code>T</code> for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to <code>W</code>, <code>T</code> and <code>L</code>.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>1.1 2.5 1.7\n1.2 3.1 1.6\n4.1 1.2 1.1\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>T T W 39.31\n\n\n#include &lt;stdio.h&gt;\n\nint main() {\n    double bet[3][3];\n    int i, j;\n    double max[3],sum;\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            scanf(&quot;%lf&quot;, &amp;bet[i][j]);\n        }\n        max[i] = bet[i][0];\n    }\n\n\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            if (max[i] &lt; bet[i][j]) {\n                max[i] = bet[i][j];\n            }\n        }\n    }\n    sum = (max[0] * max[1] * max[2] * 0.65 - 1) * 2;\n    for (i = 0; i &lt; 3; i++) {\n        for (j = 0; j &lt; 3; j++) {\n            if (max[i] == bet[i][j]) {\n                if (j == 0) printf(&quot;W &quot;);\n                else if (j == 1)printf(&quot;T &quot;);\n                else printf(&quot;L &quot;);\n            }\n        }\n    }\n    printf(&quot;%.2lf&quot;, sum);\n}\n</code></pre>"},{"title":"PAT每日一题|1027 Colors in Mars","url":"141.html","id":"141","date":"2018-10-02T15:01:30.000Z","_content":"\nPeople in Mars represent the colors in their computers in a similar way as the Earth people. That is, a color is represented by a 6-digit number, where the first 2 digits are for `Red`, the middle 2 digits for `Green`, and the last 2 digits for `Blue`. The only difference is that they use radix 13 (0-9 and A-C) instead of 16. Now given a color in three decimal numbers (each between 0 and 168), you are supposed to output their Mars RGB values.\n\n### Input Specification:\n\nEach input file contains one test case which occupies a line containing the three decimal color values.\n\n### Output Specification:\n\nFor each test case you should output the Mars RGB value in the following format: first output `#`, then followed by a 6-digit number where all the English characters must be upper-cased. If a single color is only 1-digit long, you must print a `0` to its left.\n\n### Sample Input:\n\n    15 43 71\n    \n\n### Sample Output:\n\n    #123456\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tint r, g, b;\n    \tint i;\n    \tchar s1[2] = { '0' }, s2[2] = { '0' }, s3[2] = { '0' };\n    \tscanf(\"%d%d%d\", &r, &g, &b);\n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (r % 13 == 0) s1[i] = '0';\n    \t\telse if (r % 13 == 1) s1[i] = '1';\n    \t\telse if (r % 13 == 2) s1[i] = '2';\n    \t\telse if (r % 13 == 3) s1[i] = '3';\n    \t\telse if (r % 13 == 4) s1[i] = '4';\n    \t\telse if (r % 13 == 5) s1[i] = '5';\n    \t\telse if (r % 13 == 6) s1[i] = '6';\n    \t\telse if (r % 13 == 7) s1[i] = '7';\n    \t\telse if (r % 13 == 8) s1[i] = '8';\n    \t\telse if (r % 13 == 9) s1[i] = '9';\n    \t\telse if (r % 13 == 10) s1[i] = 'A';\n    \t\telse if (r % 13 == 11) s1[i] = 'B';\n    \t\telse if (r % 13 == 12) s1[i] = 'C';\n    \t\ti++; r = r / 13;\n    \t}\n    \tif (r % 13 == 0) s1[i] = '0';\n    \telse if (r % 13 == 1) s1[i] = '1';\n    \telse if (r % 13 == 2) s1[i] = '2';\n    \telse if (r % 13 == 3) s1[i] = '3';\n    \telse if (r % 13 == 4) s1[i] = '4';\n    \telse if (r % 13 == 5) s1[i] = '5';\n    \telse if (r % 13 == 6) s1[i] = '6';\n    \telse if (r % 13 == 7) s1[i] = '7';\n    \telse if (r % 13 == 8) s1[i] = '8';\n    \telse if (r % 13 == 9) s1[i] = '9';\n    \telse if (r % 13 == 10) s1[i] = 'A';\n    \telse if (r % 13 == 11) s1[i] = 'B';\n    \telse if (r % 13 == 12) s1[i] = 'C';\n    \n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (g % 13 == 0) s2[i] = '0';\n    \t\telse if (g % 13 == 1) s2[i] = '1';\n    \t\telse if (g % 13 == 2) s2[i] = '2';\n    \t\telse if (g % 13 == 3) s2[i] = '3';\n    \t\telse if (g % 13 == 4) s2[i] = '4';\n    \t\telse if (g % 13 == 5) s2[i] = '5';\n    \t\telse if (g % 13 == 6) s2[i] = '6';\n    \t\telse if (g % 13 == 7) s2[i] = '7';\n    \t\telse if (g % 13 == 8) s2[i] = '8';\n    \t\telse if (g % 13 == 9) s2[i] = '9';\n    \t\telse if (g % 13 == 10) s2[i] = 'A';\n    \t\telse if (g % 13 == 11) s2[i] = 'B';\n    \t\telse if (g % 13 == 12) s2[i] = 'C';\n    \t\ti++; g = g / 13;\n    \t}\n    \tif (g % 13 == 0) s2[i] = '0';\n    \telse if (g % 13 == 1) s2[i] = '1';\n    \telse if (g % 13 == 2) s2[i] = '2';\n    \telse if (g % 13 == 3) s2[i] = '3';\n    \telse if (g % 13 == 4) s2[i] = '4';\n    \telse if (g % 13 == 5) s2[i] = '5';\n    \telse if (g % 13 == 6) s2[i] = '6';\n    \telse if (g % 13 == 7) s2[i] = '7';\n    \telse if (g % 13 == 8) s2[i] = '8';\n    \telse if (g % 13 == 9) s2[i] = '9';\n    \telse if (g % 13 == 10) s2[i] = 'A';\n    \telse if (g % 13 == 11) s2[i] = 'B';\n    \telse if (g % 13 == 12) s2[i] = 'C';\n    \n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (b % 13 == 0) s3[i] = '0';\n    \t\telse if (b % 13 == 1) s3[i] = '1';\n    \t\telse if (b % 13 == 2) s3[i] = '2';\n    \t\telse if (b % 13 == 3) s3[i] = '3';\n    \t\telse if (b % 13 == 4) s3[i] = '4';\n    \t\telse if (b % 13 == 5) s3[i] = '5';\n    \t\telse if (b % 13 == 6) s3[i] = '6';\n    \t\telse if (b % 13 == 7) s3[i] = '7';\n    \t\telse if (b % 13 == 8) s3[i] = '8';\n    \t\telse if (b % 13 == 9) s3[i] = '9';\n    \t\telse if (b % 13 == 10) s3[i] = 'A';\n    \t\telse if (b % 13 == 11) s3[i] = 'B';\n    \t\telse if (b % 13 == 12) s3[i] = 'C';\n    \t\ti++; b = b / 13;\n    \t}\n    \tif (b % 13 == 0) s3[i] = '0';\n    \telse if (b % 13 == 1) s3[i] = '1';\n    \telse if (b % 13 == 2) s3[i] = '2';\n    \telse if (b % 13 == 3) s3[i] = '3';\n    \telse if (b % 13 == 4) s3[i] = '4';\n    \telse if (b % 13 == 5) s3[i] = '5';\n    \telse if (b % 13 == 6) s3[i] = '6';\n    \telse if (b % 13 == 7) s3[i] = '7';\n    \telse if (b % 13 == 8) s3[i] = '8';\n    \telse if (b % 13 == 9) s3[i] = '9';\n    \telse if (b % 13 == 10) s3[i] = 'A';\n    \telse if (b % 13 == 11) s3[i] = 'B';\n    \telse if (b % 13 == 12) s3[i] = 'C';\n    \tprintf(\"#\");\n    \tfor (i = 1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s1[i]);\n    \t}\n    \tfor (i =  1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s2[i]);\n    \t}\n    \tfor (i =  1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s3[i]);\n    \t}\n    \n    }\n\n#### 注：代码可进行精简","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981027-colors-in-mars.md","raw":"---\ntitle: PAT每日一题|1027 Colors in Mars\nurl: 141.html\nid: 141\ncategories:\n  - PAT\ndate: 2018-10-02 23:01:30\ntags:\n---\n\nPeople in Mars represent the colors in their computers in a similar way as the Earth people. That is, a color is represented by a 6-digit number, where the first 2 digits are for `Red`, the middle 2 digits for `Green`, and the last 2 digits for `Blue`. The only difference is that they use radix 13 (0-9 and A-C) instead of 16. Now given a color in three decimal numbers (each between 0 and 168), you are supposed to output their Mars RGB values.\n\n### Input Specification:\n\nEach input file contains one test case which occupies a line containing the three decimal color values.\n\n### Output Specification:\n\nFor each test case you should output the Mars RGB value in the following format: first output `#`, then followed by a 6-digit number where all the English characters must be upper-cased. If a single color is only 1-digit long, you must print a `0` to its left.\n\n### Sample Input:\n\n    15 43 71\n    \n\n### Sample Output:\n\n    #123456\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tint r, g, b;\n    \tint i;\n    \tchar s1[2] = { '0' }, s2[2] = { '0' }, s3[2] = { '0' };\n    \tscanf(\"%d%d%d\", &r, &g, &b);\n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (r % 13 == 0) s1[i] = '0';\n    \t\telse if (r % 13 == 1) s1[i] = '1';\n    \t\telse if (r % 13 == 2) s1[i] = '2';\n    \t\telse if (r % 13 == 3) s1[i] = '3';\n    \t\telse if (r % 13 == 4) s1[i] = '4';\n    \t\telse if (r % 13 == 5) s1[i] = '5';\n    \t\telse if (r % 13 == 6) s1[i] = '6';\n    \t\telse if (r % 13 == 7) s1[i] = '7';\n    \t\telse if (r % 13 == 8) s1[i] = '8';\n    \t\telse if (r % 13 == 9) s1[i] = '9';\n    \t\telse if (r % 13 == 10) s1[i] = 'A';\n    \t\telse if (r % 13 == 11) s1[i] = 'B';\n    \t\telse if (r % 13 == 12) s1[i] = 'C';\n    \t\ti++; r = r / 13;\n    \t}\n    \tif (r % 13 == 0) s1[i] = '0';\n    \telse if (r % 13 == 1) s1[i] = '1';\n    \telse if (r % 13 == 2) s1[i] = '2';\n    \telse if (r % 13 == 3) s1[i] = '3';\n    \telse if (r % 13 == 4) s1[i] = '4';\n    \telse if (r % 13 == 5) s1[i] = '5';\n    \telse if (r % 13 == 6) s1[i] = '6';\n    \telse if (r % 13 == 7) s1[i] = '7';\n    \telse if (r % 13 == 8) s1[i] = '8';\n    \telse if (r % 13 == 9) s1[i] = '9';\n    \telse if (r % 13 == 10) s1[i] = 'A';\n    \telse if (r % 13 == 11) s1[i] = 'B';\n    \telse if (r % 13 == 12) s1[i] = 'C';\n    \n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (g % 13 == 0) s2[i] = '0';\n    \t\telse if (g % 13 == 1) s2[i] = '1';\n    \t\telse if (g % 13 == 2) s2[i] = '2';\n    \t\telse if (g % 13 == 3) s2[i] = '3';\n    \t\telse if (g % 13 == 4) s2[i] = '4';\n    \t\telse if (g % 13 == 5) s2[i] = '5';\n    \t\telse if (g % 13 == 6) s2[i] = '6';\n    \t\telse if (g % 13 == 7) s2[i] = '7';\n    \t\telse if (g % 13 == 8) s2[i] = '8';\n    \t\telse if (g % 13 == 9) s2[i] = '9';\n    \t\telse if (g % 13 == 10) s2[i] = 'A';\n    \t\telse if (g % 13 == 11) s2[i] = 'B';\n    \t\telse if (g % 13 == 12) s2[i] = 'C';\n    \t\ti++; g = g / 13;\n    \t}\n    \tif (g % 13 == 0) s2[i] = '0';\n    \telse if (g % 13 == 1) s2[i] = '1';\n    \telse if (g % 13 == 2) s2[i] = '2';\n    \telse if (g % 13 == 3) s2[i] = '3';\n    \telse if (g % 13 == 4) s2[i] = '4';\n    \telse if (g % 13 == 5) s2[i] = '5';\n    \telse if (g % 13 == 6) s2[i] = '6';\n    \telse if (g % 13 == 7) s2[i] = '7';\n    \telse if (g % 13 == 8) s2[i] = '8';\n    \telse if (g % 13 == 9) s2[i] = '9';\n    \telse if (g % 13 == 10) s2[i] = 'A';\n    \telse if (g % 13 == 11) s2[i] = 'B';\n    \telse if (g % 13 == 12) s2[i] = 'C';\n    \n    \ti = 0;\n    \twhile (i<=1) {\n    \t\tif (b % 13 == 0) s3[i] = '0';\n    \t\telse if (b % 13 == 1) s3[i] = '1';\n    \t\telse if (b % 13 == 2) s3[i] = '2';\n    \t\telse if (b % 13 == 3) s3[i] = '3';\n    \t\telse if (b % 13 == 4) s3[i] = '4';\n    \t\telse if (b % 13 == 5) s3[i] = '5';\n    \t\telse if (b % 13 == 6) s3[i] = '6';\n    \t\telse if (b % 13 == 7) s3[i] = '7';\n    \t\telse if (b % 13 == 8) s3[i] = '8';\n    \t\telse if (b % 13 == 9) s3[i] = '9';\n    \t\telse if (b % 13 == 10) s3[i] = 'A';\n    \t\telse if (b % 13 == 11) s3[i] = 'B';\n    \t\telse if (b % 13 == 12) s3[i] = 'C';\n    \t\ti++; b = b / 13;\n    \t}\n    \tif (b % 13 == 0) s3[i] = '0';\n    \telse if (b % 13 == 1) s3[i] = '1';\n    \telse if (b % 13 == 2) s3[i] = '2';\n    \telse if (b % 13 == 3) s3[i] = '3';\n    \telse if (b % 13 == 4) s3[i] = '4';\n    \telse if (b % 13 == 5) s3[i] = '5';\n    \telse if (b % 13 == 6) s3[i] = '6';\n    \telse if (b % 13 == 7) s3[i] = '7';\n    \telse if (b % 13 == 8) s3[i] = '8';\n    \telse if (b % 13 == 9) s3[i] = '9';\n    \telse if (b % 13 == 10) s3[i] = 'A';\n    \telse if (b % 13 == 11) s3[i] = 'B';\n    \telse if (b % 13 == 12) s3[i] = 'C';\n    \tprintf(\"#\");\n    \tfor (i = 1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s1[i]);\n    \t}\n    \tfor (i =  1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s2[i]);\n    \t}\n    \tfor (i =  1; i >= 0; i--) {\n    \t\tprintf(\"%c\", s3[i]);\n    \t}\n    \n    }\n\n#### 注：代码可进行精简","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981027-colors-in-mars","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6af00137svz7ybpsi68","content":"<p>People in Mars represent the colors in their computers in a similar way as the Earth people. That is, a color is represented by a 6-digit number, where the first 2 digits are for <code>Red</code>, the middle 2 digits for <code>Green</code>, and the last 2 digits for <code>Blue</code>. The only difference is that they use radix 13 (0-9 and A-C) instead of 16. Now given a color in three decimal numbers (each between 0 and 168), you are supposed to output their Mars RGB values.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case which occupies a line containing the three decimal color values.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case you should output the Mars RGB value in the following format: first output <code>#</code>, then followed by a 6-digit number where all the English characters must be upper-cased. If a single color is only 1-digit long, you must print a <code>0</code> to its left.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>15 43 71\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>#123456\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    int r, g, b;\n    int i;\n    char s1[2] = { &apos;0&apos; }, s2[2] = { &apos;0&apos; }, s3[2] = { &apos;0&apos; };\n    scanf(&quot;%d%d%d&quot;, &amp;r, &amp;g, &amp;b);\n    i = 0;\n    while (i&lt;=1) {\n        if (r % 13 == 0) s1[i] = &apos;0&apos;;\n        else if (r % 13 == 1) s1[i] = &apos;1&apos;;\n        else if (r % 13 == 2) s1[i] = &apos;2&apos;;\n        else if (r % 13 == 3) s1[i] = &apos;3&apos;;\n        else if (r % 13 == 4) s1[i] = &apos;4&apos;;\n        else if (r % 13 == 5) s1[i] = &apos;5&apos;;\n        else if (r % 13 == 6) s1[i] = &apos;6&apos;;\n        else if (r % 13 == 7) s1[i] = &apos;7&apos;;\n        else if (r % 13 == 8) s1[i] = &apos;8&apos;;\n        else if (r % 13 == 9) s1[i] = &apos;9&apos;;\n        else if (r % 13 == 10) s1[i] = &apos;A&apos;;\n        else if (r % 13 == 11) s1[i] = &apos;B&apos;;\n        else if (r % 13 == 12) s1[i] = &apos;C&apos;;\n        i++; r = r / 13;\n    }\n    if (r % 13 == 0) s1[i] = &apos;0&apos;;\n    else if (r % 13 == 1) s1[i] = &apos;1&apos;;\n    else if (r % 13 == 2) s1[i] = &apos;2&apos;;\n    else if (r % 13 == 3) s1[i] = &apos;3&apos;;\n    else if (r % 13 == 4) s1[i] = &apos;4&apos;;\n    else if (r % 13 == 5) s1[i] = &apos;5&apos;;\n    else if (r % 13 == 6) s1[i] = &apos;6&apos;;\n    else if (r % 13 == 7) s1[i] = &apos;7&apos;;\n    else if (r % 13 == 8) s1[i] = &apos;8&apos;;\n    else if (r % 13 == 9) s1[i] = &apos;9&apos;;\n    else if (r % 13 == 10) s1[i] = &apos;A&apos;;\n    else if (r % 13 == 11) s1[i] = &apos;B&apos;;\n    else if (r % 13 == 12) s1[i] = &apos;C&apos;;\n\n    i = 0;\n    while (i&lt;=1) {\n        if (g % 13 == 0) s2[i] = &apos;0&apos;;\n        else if (g % 13 == 1) s2[i] = &apos;1&apos;;\n        else if (g % 13 == 2) s2[i] = &apos;2&apos;;\n        else if (g % 13 == 3) s2[i] = &apos;3&apos;;\n        else if (g % 13 == 4) s2[i] = &apos;4&apos;;\n        else if (g % 13 == 5) s2[i] = &apos;5&apos;;\n        else if (g % 13 == 6) s2[i] = &apos;6&apos;;\n        else if (g % 13 == 7) s2[i] = &apos;7&apos;;\n        else if (g % 13 == 8) s2[i] = &apos;8&apos;;\n        else if (g % 13 == 9) s2[i] = &apos;9&apos;;\n        else if (g % 13 == 10) s2[i] = &apos;A&apos;;\n        else if (g % 13 == 11) s2[i] = &apos;B&apos;;\n        else if (g % 13 == 12) s2[i] = &apos;C&apos;;\n        i++; g = g / 13;\n    }\n    if (g % 13 == 0) s2[i] = &apos;0&apos;;\n    else if (g % 13 == 1) s2[i] = &apos;1&apos;;\n    else if (g % 13 == 2) s2[i] = &apos;2&apos;;\n    else if (g % 13 == 3) s2[i] = &apos;3&apos;;\n    else if (g % 13 == 4) s2[i] = &apos;4&apos;;\n    else if (g % 13 == 5) s2[i] = &apos;5&apos;;\n    else if (g % 13 == 6) s2[i] = &apos;6&apos;;\n    else if (g % 13 == 7) s2[i] = &apos;7&apos;;\n    else if (g % 13 == 8) s2[i] = &apos;8&apos;;\n    else if (g % 13 == 9) s2[i] = &apos;9&apos;;\n    else if (g % 13 == 10) s2[i] = &apos;A&apos;;\n    else if (g % 13 == 11) s2[i] = &apos;B&apos;;\n    else if (g % 13 == 12) s2[i] = &apos;C&apos;;\n\n    i = 0;\n    while (i&lt;=1) {\n        if (b % 13 == 0) s3[i] = &apos;0&apos;;\n        else if (b % 13 == 1) s3[i] = &apos;1&apos;;\n        else if (b % 13 == 2) s3[i] = &apos;2&apos;;\n        else if (b % 13 == 3) s3[i] = &apos;3&apos;;\n        else if (b % 13 == 4) s3[i] = &apos;4&apos;;\n        else if (b % 13 == 5) s3[i] = &apos;5&apos;;\n        else if (b % 13 == 6) s3[i] = &apos;6&apos;;\n        else if (b % 13 == 7) s3[i] = &apos;7&apos;;\n        else if (b % 13 == 8) s3[i] = &apos;8&apos;;\n        else if (b % 13 == 9) s3[i] = &apos;9&apos;;\n        else if (b % 13 == 10) s3[i] = &apos;A&apos;;\n        else if (b % 13 == 11) s3[i] = &apos;B&apos;;\n        else if (b % 13 == 12) s3[i] = &apos;C&apos;;\n        i++; b = b / 13;\n    }\n    if (b % 13 == 0) s3[i] = &apos;0&apos;;\n    else if (b % 13 == 1) s3[i] = &apos;1&apos;;\n    else if (b % 13 == 2) s3[i] = &apos;2&apos;;\n    else if (b % 13 == 3) s3[i] = &apos;3&apos;;\n    else if (b % 13 == 4) s3[i] = &apos;4&apos;;\n    else if (b % 13 == 5) s3[i] = &apos;5&apos;;\n    else if (b % 13 == 6) s3[i] = &apos;6&apos;;\n    else if (b % 13 == 7) s3[i] = &apos;7&apos;;\n    else if (b % 13 == 8) s3[i] = &apos;8&apos;;\n    else if (b % 13 == 9) s3[i] = &apos;9&apos;;\n    else if (b % 13 == 10) s3[i] = &apos;A&apos;;\n    else if (b % 13 == 11) s3[i] = &apos;B&apos;;\n    else if (b % 13 == 12) s3[i] = &apos;C&apos;;\n    printf(&quot;#&quot;);\n    for (i = 1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s1[i]);\n    }\n    for (i =  1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s2[i]);\n    }\n    for (i =  1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s3[i]);\n    }\n\n}\n</code></pre><h4 id=\"注：代码可进行精简\"><a href=\"#注：代码可进行精简\" class=\"headerlink\" title=\"注：代码可进行精简\"></a>注：代码可进行精简</h4>","site":{"data":{}},"excerpt":"","more":"<p>People in Mars represent the colors in their computers in a similar way as the Earth people. That is, a color is represented by a 6-digit number, where the first 2 digits are for <code>Red</code>, the middle 2 digits for <code>Green</code>, and the last 2 digits for <code>Blue</code>. The only difference is that they use radix 13 (0-9 and A-C) instead of 16. Now given a color in three decimal numbers (each between 0 and 168), you are supposed to output their Mars RGB values.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case which occupies a line containing the three decimal color values.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case you should output the Mars RGB value in the following format: first output <code>#</code>, then followed by a 6-digit number where all the English characters must be upper-cased. If a single color is only 1-digit long, you must print a <code>0</code> to its left.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>15 43 71\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>#123456\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    int r, g, b;\n    int i;\n    char s1[2] = { &apos;0&apos; }, s2[2] = { &apos;0&apos; }, s3[2] = { &apos;0&apos; };\n    scanf(&quot;%d%d%d&quot;, &amp;r, &amp;g, &amp;b);\n    i = 0;\n    while (i&lt;=1) {\n        if (r % 13 == 0) s1[i] = &apos;0&apos;;\n        else if (r % 13 == 1) s1[i] = &apos;1&apos;;\n        else if (r % 13 == 2) s1[i] = &apos;2&apos;;\n        else if (r % 13 == 3) s1[i] = &apos;3&apos;;\n        else if (r % 13 == 4) s1[i] = &apos;4&apos;;\n        else if (r % 13 == 5) s1[i] = &apos;5&apos;;\n        else if (r % 13 == 6) s1[i] = &apos;6&apos;;\n        else if (r % 13 == 7) s1[i] = &apos;7&apos;;\n        else if (r % 13 == 8) s1[i] = &apos;8&apos;;\n        else if (r % 13 == 9) s1[i] = &apos;9&apos;;\n        else if (r % 13 == 10) s1[i] = &apos;A&apos;;\n        else if (r % 13 == 11) s1[i] = &apos;B&apos;;\n        else if (r % 13 == 12) s1[i] = &apos;C&apos;;\n        i++; r = r / 13;\n    }\n    if (r % 13 == 0) s1[i] = &apos;0&apos;;\n    else if (r % 13 == 1) s1[i] = &apos;1&apos;;\n    else if (r % 13 == 2) s1[i] = &apos;2&apos;;\n    else if (r % 13 == 3) s1[i] = &apos;3&apos;;\n    else if (r % 13 == 4) s1[i] = &apos;4&apos;;\n    else if (r % 13 == 5) s1[i] = &apos;5&apos;;\n    else if (r % 13 == 6) s1[i] = &apos;6&apos;;\n    else if (r % 13 == 7) s1[i] = &apos;7&apos;;\n    else if (r % 13 == 8) s1[i] = &apos;8&apos;;\n    else if (r % 13 == 9) s1[i] = &apos;9&apos;;\n    else if (r % 13 == 10) s1[i] = &apos;A&apos;;\n    else if (r % 13 == 11) s1[i] = &apos;B&apos;;\n    else if (r % 13 == 12) s1[i] = &apos;C&apos;;\n\n    i = 0;\n    while (i&lt;=1) {\n        if (g % 13 == 0) s2[i] = &apos;0&apos;;\n        else if (g % 13 == 1) s2[i] = &apos;1&apos;;\n        else if (g % 13 == 2) s2[i] = &apos;2&apos;;\n        else if (g % 13 == 3) s2[i] = &apos;3&apos;;\n        else if (g % 13 == 4) s2[i] = &apos;4&apos;;\n        else if (g % 13 == 5) s2[i] = &apos;5&apos;;\n        else if (g % 13 == 6) s2[i] = &apos;6&apos;;\n        else if (g % 13 == 7) s2[i] = &apos;7&apos;;\n        else if (g % 13 == 8) s2[i] = &apos;8&apos;;\n        else if (g % 13 == 9) s2[i] = &apos;9&apos;;\n        else if (g % 13 == 10) s2[i] = &apos;A&apos;;\n        else if (g % 13 == 11) s2[i] = &apos;B&apos;;\n        else if (g % 13 == 12) s2[i] = &apos;C&apos;;\n        i++; g = g / 13;\n    }\n    if (g % 13 == 0) s2[i] = &apos;0&apos;;\n    else if (g % 13 == 1) s2[i] = &apos;1&apos;;\n    else if (g % 13 == 2) s2[i] = &apos;2&apos;;\n    else if (g % 13 == 3) s2[i] = &apos;3&apos;;\n    else if (g % 13 == 4) s2[i] = &apos;4&apos;;\n    else if (g % 13 == 5) s2[i] = &apos;5&apos;;\n    else if (g % 13 == 6) s2[i] = &apos;6&apos;;\n    else if (g % 13 == 7) s2[i] = &apos;7&apos;;\n    else if (g % 13 == 8) s2[i] = &apos;8&apos;;\n    else if (g % 13 == 9) s2[i] = &apos;9&apos;;\n    else if (g % 13 == 10) s2[i] = &apos;A&apos;;\n    else if (g % 13 == 11) s2[i] = &apos;B&apos;;\n    else if (g % 13 == 12) s2[i] = &apos;C&apos;;\n\n    i = 0;\n    while (i&lt;=1) {\n        if (b % 13 == 0) s3[i] = &apos;0&apos;;\n        else if (b % 13 == 1) s3[i] = &apos;1&apos;;\n        else if (b % 13 == 2) s3[i] = &apos;2&apos;;\n        else if (b % 13 == 3) s3[i] = &apos;3&apos;;\n        else if (b % 13 == 4) s3[i] = &apos;4&apos;;\n        else if (b % 13 == 5) s3[i] = &apos;5&apos;;\n        else if (b % 13 == 6) s3[i] = &apos;6&apos;;\n        else if (b % 13 == 7) s3[i] = &apos;7&apos;;\n        else if (b % 13 == 8) s3[i] = &apos;8&apos;;\n        else if (b % 13 == 9) s3[i] = &apos;9&apos;;\n        else if (b % 13 == 10) s3[i] = &apos;A&apos;;\n        else if (b % 13 == 11) s3[i] = &apos;B&apos;;\n        else if (b % 13 == 12) s3[i] = &apos;C&apos;;\n        i++; b = b / 13;\n    }\n    if (b % 13 == 0) s3[i] = &apos;0&apos;;\n    else if (b % 13 == 1) s3[i] = &apos;1&apos;;\n    else if (b % 13 == 2) s3[i] = &apos;2&apos;;\n    else if (b % 13 == 3) s3[i] = &apos;3&apos;;\n    else if (b % 13 == 4) s3[i] = &apos;4&apos;;\n    else if (b % 13 == 5) s3[i] = &apos;5&apos;;\n    else if (b % 13 == 6) s3[i] = &apos;6&apos;;\n    else if (b % 13 == 7) s3[i] = &apos;7&apos;;\n    else if (b % 13 == 8) s3[i] = &apos;8&apos;;\n    else if (b % 13 == 9) s3[i] = &apos;9&apos;;\n    else if (b % 13 == 10) s3[i] = &apos;A&apos;;\n    else if (b % 13 == 11) s3[i] = &apos;B&apos;;\n    else if (b % 13 == 12) s3[i] = &apos;C&apos;;\n    printf(&quot;#&quot;);\n    for (i = 1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s1[i]);\n    }\n    for (i =  1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s2[i]);\n    }\n    for (i =  1; i &gt;= 0; i--) {\n        printf(&quot;%c&quot;, s3[i]);\n    }\n\n}\n</code></pre><h4 id=\"注：代码可进行精简\"><a href=\"#注：代码可进行精简\" class=\"headerlink\" title=\"注：代码可进行精简\"></a>注：代码可进行精简</h4>"},{"title":"PAT每日一题|1031 Hello World for U","url":"139.html","id":"139","date":"2018-10-02T12:41:27.000Z","_content":"\nGiven any string of N (≥5) characters, you are asked to form the characters into the shape of `U`. For example, `helloworld` can be printed as:\n\n    h  d\n    e  l\n    l  r\n    lowo\n    \n\nThat is, the characters must be printed in the original order, starting top-down from the left vertical line with n​1​​ characters, then left to right along the bottom line with n​2​​ characters, and finally bottom-up along the vertical line with n​3​​ characters. And more, we would like `U` to be as squared as possible -- that is, it must be satisfied that n​1​​=n​3​​=max { k | k≤n​2​​ for all 3≤n​2​​≤N } with n​1​​+n​2​​+n​3​​−2=N.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.\n\n### Output Specification:\n\nFor each test case, print the input string in the shape of U as specified in the description.\n\n### Sample Input:\n\n    helloworld!\n    \n\n### Sample Output:\n\n    h   !\n    e   d\n    l   l\n    lowor\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tchar s[100];\n    \tint len, i, a,b;\n    \tint n1, n2, n3;\n    \tscanf(\"%s\", s);\n    \tlen = strlen(s);\n    \tif ((len + 2) % 3 == 0) {\n    \t\tn1 = n2 = n3 = (len + 2) / 3;\n    \t}\n    \telse if (len % 3 == 0) {\n    \t\tn1 = n3 = len / 3;\n    \t\tn2 = n1 + 2;\n    \t}\n    \telse {\n    \t\tn1 = n3 = (len + 1) / 3;\n    \t\tn2 = n1 + 1;\n    \t}\n    \t\n    \tfor (i = 0; i < n1; i++) {\n    \t\tprintf(\"%c\",s[i]);\n    \t\ta = b = 0;\n    \t\tif (i != n1-1) {\n    \t\t\twhile (a <n2-2) {\n    \t\t\t\tprintf(\" \");\n    \t\t\t\ta++;\n    \t\t\t}\n    \t\t}\n    \t\telse {\n    \t\t\twhile (b <n2-2) {\n    \t\t\t\tprintf(\"%c\", s[i + b + 1]);\n    \t\t\t\tb++;\n    \t\t\t}\n    \t\t}\n    \t\tprintf(\"%c\\n\", s[len - 1 - i]);\n    \n    \t}\n    \t\n    }","source":"_posts/pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981031-hello-world-for-u.md","raw":"---\ntitle: PAT每日一题|1031 Hello World for U\nurl: 139.html\nid: 139\ncategories:\n  - PAT\ndate: 2018-10-02 20:41:27\ntags:\n---\n\nGiven any string of N (≥5) characters, you are asked to form the characters into the shape of `U`. For example, `helloworld` can be printed as:\n\n    h  d\n    e  l\n    l  r\n    lowo\n    \n\nThat is, the characters must be printed in the original order, starting top-down from the left vertical line with n​1​​ characters, then left to right along the bottom line with n​2​​ characters, and finally bottom-up along the vertical line with n​3​​ characters. And more, we would like `U` to be as squared as possible -- that is, it must be satisfied that n​1​​=n​3​​=max { k | k≤n​2​​ for all 3≤n​2​​≤N } with n​1​​+n​2​​+n​3​​−2=N.\n\n### Input Specification:\n\nEach input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.\n\n### Output Specification:\n\nFor each test case, print the input string in the shape of U as specified in the description.\n\n### Sample Input:\n\n    helloworld!\n    \n\n### Sample Output:\n\n    h   !\n    e   d\n    l   l\n    lowor\n    \n\n    #include <stdio.h>\n    #include <string.h>\n    int main() {\n    \tchar s[100];\n    \tint len, i, a,b;\n    \tint n1, n2, n3;\n    \tscanf(\"%s\", s);\n    \tlen = strlen(s);\n    \tif ((len + 2) % 3 == 0) {\n    \t\tn1 = n2 = n3 = (len + 2) / 3;\n    \t}\n    \telse if (len % 3 == 0) {\n    \t\tn1 = n3 = len / 3;\n    \t\tn2 = n1 + 2;\n    \t}\n    \telse {\n    \t\tn1 = n3 = (len + 1) / 3;\n    \t\tn2 = n1 + 1;\n    \t}\n    \t\n    \tfor (i = 0; i < n1; i++) {\n    \t\tprintf(\"%c\",s[i]);\n    \t\ta = b = 0;\n    \t\tif (i != n1-1) {\n    \t\t\twhile (a <n2-2) {\n    \t\t\t\tprintf(\" \");\n    \t\t\t\ta++;\n    \t\t\t}\n    \t\t}\n    \t\telse {\n    \t\t\twhile (b <n2-2) {\n    \t\t\t\tprintf(\"%c\", s[i + b + 1]);\n    \t\t\t\tb++;\n    \t\t\t}\n    \t\t}\n    \t\tprintf(\"%c\\n\", s[len - 1 - i]);\n    \n    \t}\n    \t\n    }","slug":"pat-e6-af-8f-e6-97-a5-e4-b8-80-e9-a2-981031-hello-world-for-u","published":1,"updated":"2018-12-18T12:25:32.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjptrt6ah00167svzijmd769p","content":"<p>Given any string of N (≥5) characters, you are asked to form the characters into the shape of <code>U</code>. For example, <code>helloworld</code> can be printed as:</p>\n<pre><code>h  d\ne  l\nl  r\nlowo\n</code></pre><p>That is, the characters must be printed in the original order, starting top-down from the left vertical line with n​1​​ characters, then left to right along the bottom line with n​2​​ characters, and finally bottom-up along the vertical line with n​3​​ characters. And more, we would like <code>U</code> to be as squared as possible – that is, it must be satisfied that n​1​​=n​3​​=max { k | k≤n​2​​ for all 3≤n​2​​≤N } with n​1​​+n​2​​+n​3​​−2=N.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print the input string in the shape of U as specified in the description.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>helloworld!\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>h   !\ne   d\nl   l\nlowor\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char s[100];\n    int len, i, a,b;\n    int n1, n2, n3;\n    scanf(&quot;%s&quot;, s);\n    len = strlen(s);\n    if ((len + 2) % 3 == 0) {\n        n1 = n2 = n3 = (len + 2) / 3;\n    }\n    else if (len % 3 == 0) {\n        n1 = n3 = len / 3;\n        n2 = n1 + 2;\n    }\n    else {\n        n1 = n3 = (len + 1) / 3;\n        n2 = n1 + 1;\n    }\n\n    for (i = 0; i &lt; n1; i++) {\n        printf(&quot;%c&quot;,s[i]);\n        a = b = 0;\n        if (i != n1-1) {\n            while (a &lt;n2-2) {\n                printf(&quot; &quot;);\n                a++;\n            }\n        }\n        else {\n            while (b &lt;n2-2) {\n                printf(&quot;%c&quot;, s[i + b + 1]);\n                b++;\n            }\n        }\n        printf(&quot;%c\\n&quot;, s[len - 1 - i]);\n\n    }\n\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>Given any string of N (≥5) characters, you are asked to form the characters into the shape of <code>U</code>. For example, <code>helloworld</code> can be printed as:</p>\n<pre><code>h  d\ne  l\nl  r\nlowo\n</code></pre><p>That is, the characters must be printed in the original order, starting top-down from the left vertical line with n​1​​ characters, then left to right along the bottom line with n​2​​ characters, and finally bottom-up along the vertical line with n​3​​ characters. And more, we would like <code>U</code> to be as squared as possible – that is, it must be satisfied that n​1​​=n​3​​=max { k | k≤n​2​​ for all 3≤n​2​​≤N } with n​1​​+n​2​​+n​3​​−2=N.</p>\n<h3 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.</p>\n<h3 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h3><p>For each test case, print the input string in the shape of U as specified in the description.</p>\n<h3 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h3><pre><code>helloworld!\n</code></pre><h3 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h3><pre><code>h   !\ne   d\nl   l\nlowor\n\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char s[100];\n    int len, i, a,b;\n    int n1, n2, n3;\n    scanf(&quot;%s&quot;, s);\n    len = strlen(s);\n    if ((len + 2) % 3 == 0) {\n        n1 = n2 = n3 = (len + 2) / 3;\n    }\n    else if (len % 3 == 0) {\n        n1 = n3 = len / 3;\n        n2 = n1 + 2;\n    }\n    else {\n        n1 = n3 = (len + 1) / 3;\n        n2 = n1 + 1;\n    }\n\n    for (i = 0; i &lt; n1; i++) {\n        printf(&quot;%c&quot;,s[i]);\n        a = b = 0;\n        if (i != n1-1) {\n            while (a &lt;n2-2) {\n                printf(&quot; &quot;);\n                a++;\n            }\n        }\n        else {\n            while (b &lt;n2-2) {\n                printf(&quot;%c&quot;, s[i + b + 1]);\n                b++;\n            }\n        }\n        printf(&quot;%c\\n&quot;, s[len - 1 - i]);\n\n    }\n\n}\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjptrt69j00047svz373i6690","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt69s000a7svzfy22lkqg"},{"post_id":"cjptrt69500007svz0iaxum9p","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt69u000e7svzl3ydjhlx"},{"post_id":"cjptrt69m00067svzt5wobmxk","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt69w000g7svziqsmntz6"},{"post_id":"cjptrt69o00087svzpwgdmkcv","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt6a0000k7svzo750hpsn"},{"post_id":"cjptrt69d00017svzu7ffm7vq","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6a4000m7svzczhsxx0g"},{"post_id":"cjptrt69t000d7svzjciuzslj","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt6a7000p7svzmbf8rreb"},{"post_id":"cjptrt69i00037svzwa3765a0","category_id":"cjptrt69s000c7svzc4xajrjp","_id":"cjptrt6a9000s7svzqep99lts"},{"post_id":"cjptrt69v000f7svzsjp9nd15","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt6ab000w7svzeac9cm7d"},{"post_id":"cjptrt69x000j7svzpwdewtar","category_id":"cjptrt69g00027svzndhhhq55","_id":"cjptrt6ad000z7svzc72yrz9p"},{"post_id":"cjptrt69q00097svzl9bd0535","category_id":"cjptrt69x000i7svzjiaq3za8","_id":"cjptrt6af00117svzx2u4kagl"},{"post_id":"cjptrt6a5000o7svzrt85b72k","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6ag00147svzo37bl0fk"},{"post_id":"cjptrt6a8000r7svz9xgqxai2","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6ai00177svz9j11kb9s"},{"post_id":"cjptrt6aa000v7svzqq5cjadz","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6ai00187svzf8pdhfju"},{"post_id":"cjptrt6ac000y7svz5s7m5tdl","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6aj00197svzwd61sxkq"},{"post_id":"cjptrt6ae00107svz48ts2dox","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6aj001a7svzx4jtsvg3"},{"post_id":"cjptrt6af00137svz7ybpsi68","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6aj001b7svzvx08b6kg"},{"post_id":"cjptrt6ah00167svzijmd769p","category_id":"cjptrt69n00077svz72ucgtll","_id":"cjptrt6aj001c7svz7nbru0sk"}],"PostTag":[{"post_id":"cjptrt69i00037svzwa3765a0","tag_id":"cjptrt69l00057svzt886i58m","_id":"cjptrt6a7000q7svzs3u1x5t7"},{"post_id":"cjptrt69i00037svzwa3765a0","tag_id":"cjptrt69s000b7svzybpqpvk0","_id":"cjptrt6a9000t7svzf1wjblyk"},{"post_id":"cjptrt69i00037svzwa3765a0","tag_id":"cjptrt69w000h7svz7gbantmt","_id":"cjptrt6ac000x7svztd5c5maz"},{"post_id":"cjptrt69q00097svzl9bd0535","tag_id":"cjptrt6a5000n7svz51kje0bv","_id":"cjptrt6af00127svznkoh7e4f"},{"post_id":"cjptrt69q00097svzl9bd0535","tag_id":"cjptrt6aa000u7svzoly7q44q","_id":"cjptrt6ah00157svzejbrxja5"}],"Tag":[{"name":"Web服务器","_id":"cjptrt69l00057svzt886i58m"},{"name":"XAMPP","_id":"cjptrt69s000b7svzybpqpvk0"},{"name":"多站点设置","_id":"cjptrt69w000h7svz7gbantmt"},{"name":"API","_id":"cjptrt6a5000n7svz51kje0bv"},{"name":"PHP","_id":"cjptrt6aa000u7svzoly7q44q"}]}}