<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.9.9" created="2018-12-18 12:22" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>jenkinの学习日志</title>
	<link>http://jenkin.fun</link>
	<description></description>
	<pubDate>Tue, 18 Dec 2018 12:22:27 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://jenkin.fun</wp:base_site_url>
	<wp:base_blog_url>http://jenkin.fun</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[jenkin]]></wp:author_login><wp:author_email><![CDATA[jenkin_hou@yhaoo.com]]></wp:author_email><wp:author_display_name><![CDATA[jenkin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.9.9</generator>

<image>
	<url>http://jenkin.fun/wp-content/uploads/2018/09/cropped-uugai.com_1536827345215-1-32x32.png</url>
	<title>jenkinの学习日志</title>
	<link>http://jenkin.fun</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>世界，您好！</title>
		<link>http://jenkin.fun/?p=1</link>
		<pubDate>Tue, 11 Sep 2018 08:18:29 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://localhost/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date><![CDATA[2018-09-11 16:18:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-11 08:18:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-world]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XAMPP配置多站点及根目录（Windows版本）</title>
		<link>http://jenkin.fun/2018/09/13/xampp%e9%85%8d%e7%bd%ae%e5%a4%9a%e7%ab%99%e7%82%b9%e5%8f%8a%e6%a0%b9%e7%9b%ae%e5%bd%95%ef%bc%88windows%e7%89%88%e6%9c%ac%ef%bc%89/</link>
		<pubDate>Thu, 13 Sep 2018 00:49:07 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[1、首先修改C:\WINDOWS\System32\drivers\etc目录下的 hosts 文件，用记事本打开，加入：

（是在文件的未尾加入）
127.0.0.1 a.jenkin.fun
127.0.0.1 b.jenkin.fun

2、打开xampp\apache\conf\httpd.conf文件，搜索 “Include conf/extra/httpd-vhosts.conf”，确保前面没有 # 注释符，也就是确保引入了 vhosts 虚拟主机配置文件。

开启了httpd-vhosts.conf，默认的httpd.conf默认配置失效（确保 httpd-vhosts.conf 文件里也开启了虚拟主机配置，见第3条），访问此IP的域名将全部指向 vhosts.conf 中的第一个虚拟主机。（注意是第一个，详见第4）

3、在虚拟主机设置文件xampp\apache\conf\extra\httpd-vhosts.conf里设置：
取消 NameVirtualHost *:80 前面的 ##，这样就启用了 vhosts.conf ，默认的httpd.conf默认配置失效。虚拟主机配置将只设置在 httpd-vhosts.conf 里。
&lt;VirtualHost *:80&gt;
DocumentRoot "a.jenkin.fun 的网站目录"
ServerName a.jenkin.fun
&lt;/VirtualHost&gt;

&lt;VirtualHost *:80&gt;
DocumentRoot " b.jenkin.fun 的网站目录"
ServerName a.jenkin.fun

&lt;/VirtualHost&gt;

4、 设置完了第3条之后，你会发现访问 localhost直接指向到设置的 a 那个路径去了，这个问题在第2条有讲。也就是开启了 vhosts后，默认的 httpd 的配置就会失效了，默认的访问就指向到 vhosts 里的第一条设置去了。这时候你要把 localhost的目录配置给设置回来。
&lt;VirtualHost *:80&gt;
DocumentRoot "C:/xampp/htdocs"
ServerName localhost
&lt;/VirtualHost&gt;

至此，XAMPP 的虚拟主机设置完毕。

重启XAMPP中的Apache，现在访问 localhost 还是原来的 XAMPP 的帮助指南，访问 a.jenkin.fun 将指向到绑定的 a 目录，访问 b.jenkin.fun将指向到绑定的 b 目录。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date><![CDATA[2018-09-13 08:49:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-13 00:49:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[xampp%e9%85%8d%e7%bd%ae%e5%a4%9a%e7%ab%99%e7%82%b9%e5%8f%8a%e6%a0%b9%e7%9b%ae%e5%bd%95%ef%bc%88windows%e7%89%88%e6%9c%ac%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web"><![CDATA[WEB]]></category>
		<category domain="post_tag" nicename="web%e6%9c%8d%e5%8a%a1%e5%99%a8"><![CDATA[Web服务器]]></category>
		<category domain="post_tag" nicename="xampp"><![CDATA[XAMPP]]></category>
		<category domain="post_tag" nicename="%e5%a4%9a%e7%ab%99%e7%82%b9%e8%ae%be%e7%bd%ae"><![CDATA[多站点设置]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>基于PHP编写返回JSON数据的API接口</title>
		<link>http://jenkin.fun/2018/09/13/%e5%9f%ba%e4%ba%8ephp%e7%bc%96%e5%86%99%e8%bf%94%e5%9b%9ejson%e6%95%b0%e6%8d%ae%e7%9a%84api%e6%8e%a5%e5%8f%a3/</link>
		<pubDate>Thu, 13 Sep 2018 05:58:53 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[<p>首先，配置PHP连接数据库的配置文件config/db.php</p>

<!-- wp:code -->
<pre class="wp-block-code"><code>&lt;?php
header('Content-Type: application/json');
header('Content-Type: text/html;charset=utf8');
$con=new mysqli("dbhost","dbuser","password","dbname");
if(!$con){
    echo "数据库连接失败！";
    echo $con->error;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其次，以下为具体实现过程：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&lt;?php
require "config/db.php";
$key=$_GET['key'];//设置API访问时的APP Key
if($key=="XXX") {
//验证APP Key，可以通过与数据库中保存的APP Key进行对比
    $sql = "SELECT * FROM dbtable";
    $result = $con->query($sql);
    if (!$result) {
        echo $con->error;
    } else {
        $arr = array();
        while ($row = $result->fetch_assoc()) {
            $count = count($row);//不能写到for循环里
            for ($i = 0; $i &lt; $count; $i++) {
                unset($row[$i]);
            }
            array_push($arr, $row);
            //将获取的$row数据压入$arr数组中
        }
        print_r($arr);
        echo "&lt;br/>&lt;hr>";
        echo json_encode($arr,JSON_UNESCAPED_UNICODE);
        echo "&lt;br/>";
        $con->close();
    }
}else{//APP Key验证不通过所返回的输出
    ...
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>此处仅输出了返回的JSON格式数据，可根据自己的需要输出返回状态码。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date><![CDATA[2018-09-13 13:58:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-13 05:58:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%ba%e4%ba%8ephp%e7%bc%96%e5%86%99%e8%bf%94%e5%9b%9ejson%e6%95%b0%e6%8d%ae%e7%9a%84api%e6%8e%a5%e5%8f%a3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="api"><![CDATA[API]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1001 A+B Format</title>
		<link>http://jenkin.fun/2018/09/29/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981001-ab-format/</link>
		<pubDate>Sat, 29 Sep 2018 01:41:46 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Calculate a+b
 and output the sum in standard format -- that is, the digits must be 
separated into groups of three by commas (unless there are less than 
four digits).</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case contains a pair of integers a and b where −10​6​​≤a,b≤10​6​​. The numbers are separated by a space.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>-1000000 9
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>-999,991
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
#include &lt;math.h>
#include &lt;stdlib.h>
int sum(int a, int b) {
	return a + b;
}

int main() {
	int a=0, b=0, s;
	int i = 1000, j = 0;
	int result[9] = { 0 };
	scanf("%d%d", &amp;a, &amp;b);
	s = sum(a, b);
	while (s / i != 0) {
		result[j] = s % i;
		s=s/1000;
		j++;
	}
	result[j] = s % i;
	for (i = j ; i >= 0; i--) {
		if (i != j) {
			result[i] = abs(result[i]);

			if (result[i] == 0) {
				printf("000");
			}
			else if (result[i] > 0 &amp;&amp; result[i] &lt; 10) {
				printf("00%d", result[i]);
			}
			else if (result[i] >= 10 &amp;&amp; result[i] &lt; 100) {
				printf("0%d", result[i]);
			}
			else {
				printf("%d", result[i]);
			}
		}
		else printf("%d", result[i]);
		if (i != 0) {
			printf(",");
		}
	}
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date><![CDATA[2018-09-29 09:41:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-29 01:41:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981001-ab-format]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1002 A+B for Polynomials</title>
		<link>http://jenkin.fun/2018/09/30/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981002-ab-for-polynomials/</link>
		<pubDate>Sun, 30 Sep 2018 02:12:19 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>K N​1​​ a​N​1​​​​ N​2​​ a​N​2​​​​ ... N​K​​ a​N​K​​​​</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>where K is the number of nonzero terms in the polynomial, N​i​​ and a​N​i​​​​ (i=1,2,⋯,K) are the exponents and coefficients, respectively. It is given that 1≤K≤10，0≤N​K​​&lt;⋯&lt;N​2​​&lt;N​1​​≤1000.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case you should output the sum of A and B
 in one line, with the same format as the input. Notice that there must 
be NO extra space at the end of each line. Please be accurate to 1 
decimal place.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>2 1 2.4 0 3.2
2 2 1.5 1 0.5
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>3 2 1.5 1 2.9 0 3.2
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>正确：</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
int main() {
	float coe[1001] = { 0.0 };
	int a, b, i, m,num=0;
	float n;
	scanf("%d", &amp;a);
	for (i = 0; i &lt; a; i++) {
		scanf("%d%f", &amp;m,&amp;n);
		coe[m] = coe[m] + n;
	}
	scanf("%d", &amp;b);
	for (i = 0; i &lt; b; i++) {
		scanf("%d%f", &amp;m,&amp;n);
		coe[m] = coe[m] + n;
	}
	for (i = 1000; i >= 0; i--) {
		if (coe[i] != 0.0) {
			num++;
		}
	}
	printf("%d", num);
	for (i = 1000; i >= 0; i--) {
		if (coe[i] != 0.0) {
			printf(" %d %.1f", i, coe[i]);
		}
	}
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>错误：</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
int main() {
	float coe[1001] = { 0.0 };
	int a, b, i, m,num=0;
	float n;
	scanf("%d", &amp;a);
	for (i = 0; i &lt; a; i++) {
		scanf("%d%f", &amp;m,&amp;n);
		if (coe[m] == 0.0) num++;
		coe[m] = coe[m] + n;
	}
	scanf("%d", &amp;b);
	for (i = 0; i &lt; b; i++) {
		scanf("%d%f", &amp;m,&amp;n);
		if (coe[m] == 0.0) num++;
		coe[m] = coe[m] + n;
	}
	printf("%d", num);
	for (i = 1000; i >= 0; i--) {
		if (coe[i] != 0.0) {
			printf(" %d %.1f", i, coe[i]);
		}
	}
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date><![CDATA[2018-09-30 10:12:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-30 02:12:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981002-ab-for-polynomials]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1005 Spell It Right</title>
		<link>http://jenkin.fun/2018/10/02/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981005-spell-it-right/</link>
		<pubDate>Tue, 02 Oct 2018 01:19:38 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case occupies one line which contains an N (≤10​100​​).</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, output in one line the digits of the sum in 
English words. There must be one space between two consecutive words, 
but no extra space at the end of a line.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>12345
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>one five
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
#include &lt;string.h>
int main() {
	int n, i = 0;
	int j, sum = 0;
	char d[110];
	char d1[10][10]={"zero","one","two","three","four","five","six","seven","eight","nine"};
	int result[100];
	scanf("%s", d);
	n = strlen(d);
	for (i = 0; i &lt; n; i++) {
		sum = d[i] - '0'+sum;
	}
	j = 0;
		if(sum==0){
	  printf("zero");
	  
	}else{
	while (sum != 0) {
		result[j] = sum % 10;
		sum = sum / 10;
		j++;
	}

	for (i = j - 1; i >= 0; i--) {
		printf("%s",d1[result[i]]);
		if (i != 0) {
			printf(" ");
		}
	}
}
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>注意：考虑输入仅为0的情况</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 09:19:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 01:19:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981005-spell-it-right]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1008 Elevator</title>
		<link>http://jenkin.fun/2018/10/02/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981008-elevator/</link>
		<pubDate>Tue, 02 Oct 2018 01:59:23 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>The highest building in our city has only one elevator. A request list is made up with N
 positive numbers. The numbers denote at which floors the elevator will 
stop, in specified order. It costs 6 seconds to move the elevator up one
 floor, and 4 seconds to move down one floor. The elevator will stay for
 5 seconds at each stop.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For a given request list, you are to compute the total time spent to 
fulfill the requests on the list. The elevator is on the 0th floor at 
the beginning and does not have to return to the ground floor when the 
requests are fulfilled.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, print the total time on a single line. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>3 2 3 1
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>41
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
int main() {
	int n,time=0;
	int i,now=0;
	int floor[100];
	scanf("%d", &amp;n);
	for (i = 0; i &lt; n; i++) {
		scanf("%d", &amp;floor[i]);
	}
	time = time + n * 5;
	for (i = 0; i &lt; n; i++) {
		if (floor[i] - now > 0) {
			time = time + (floor[i] - now) * 6;
		}
		else if (floor[i] - now &lt; 0) {
			time = time + (now - floor[i]) * 4;
		}
		now = floor[i];
	}
	printf("%d", time);
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 09:59:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 01:59:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981008-elevator]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1011 World Cup Betting</title>
		<link>http://jenkin.fun/2018/10/02/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981011-world-cup-betting/</link>
		<pubDate>Tue, 02 Oct 2018 03:06:13 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>With the 2010 FIFA 
World Cup running, football fans the world over were becoming 
increasingly excited as the best players from the best teams doing 
battles for the World Cup trophy in South Africa. Similarly, football 
betting fans were putting their money where their mouths were, by laying
 all manner of World Cup bets.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Chinese Football Lottery provided a "Triple Winning" game. The rule 
of winning was simple: first select any three of the games. Then for 
each selected game, bet on one of the three possible results -- namely <code>W</code> for win, <code>T</code> for tie, and <code>L</code> for lose. There was an odd assigned to each result. The winner's odd would be the product of the three odds times 65%.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example, 3 games' odds are given as the following:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code> W    T    L
1.1  2.5  1.7
1.2  3.1  1.6
4.1  1.2  1.1
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To obtain the maximum profit, one must buy <code>W</code> for the 3rd game, <code>T</code> for the 2nd game, and <code>T</code> for the 1st game. If each bet takes 2 yuans, then the maximum profit would be (4.1×3.1×2.5×65%−1)×2=39.31 yuans (accurate up to 2 decimal places).</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case contains the 
betting information of 3 games. Each game occupies a line with three 
distinct odds corresponding to <code>W</code>, <code>T</code> and <code>L</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, print in one line the best bet of each game, and 
the maximum profit accurate up to 2 decimal places. The characters and 
the number must be separated by one space.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>1.1 2.5 1.7
1.2 3.1 1.6
4.1 1.2 1.1
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>T T W 39.31
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

int main() {
	double bet[3][3];
	int i, j;
	double max[3],sum;
	for (i = 0; i &lt; 3; i++) {
		for (j = 0; j &lt; 3; j++) {
			scanf("%lf", &amp;bet[i][j]);
		}
		max[i] = bet[i][0];
	}
	
	
	for (i = 0; i &lt; 3; i++) {
		for (j = 0; j &lt; 3; j++) {
			if (max[i] &lt; bet[i][j]) {
				max[i] = bet[i][j];
			}
		}
	}
	sum = (max[0] * max[1] * max[2] * 0.65 - 1) * 2;
	for (i = 0; i &lt; 3; i++) {
		for (j = 0; j &lt; 3; j++) {
			if (max[i] == bet[i][j]) {
				if (j == 0) printf("W ");
				else if (j == 1)printf("T ");
				else printf("L ");
			}
		}
	}
	printf("%.2lf", sum);
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 11:06:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 03:06:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981011-world-cup-betting]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1031 Hello World for U</title>
		<link>http://jenkin.fun/2018/10/02/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981031-hello-world-for-u/</link>
		<pubDate>Tue, 02 Oct 2018 12:41:27 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Given any string of N (≥5) characters, you are asked to form the characters into the shape of <code>U</code>. For example, <code>helloworld</code> can be printed as:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>h  d
e  l
l  r
lowo
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>That is, the characters must be printed in the original order, starting top-down from the left vertical line with n​1​​ characters, then left to right along the bottom line with n​2​​ characters, and finally bottom-up along the vertical line with n​3​​ characters. And more, we would like <code>U</code> to be as squared as possible -- that is, it must be satisfied that n​1​​=n​3​​=max { k | k≤n​2​​ for all 3≤n​2​​≤N } with n​1​​+n​2​​+n​3​​−2=N.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case contains one string
 with no less than 5 and no more than 80 characters in a line. The 
string contains no white space.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, print the input string in the shape of U as specified in the description.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>helloworld!
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>h   !
e   d
l   l
lowor
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
#include &lt;string.h>
int main() {
	char s[100];
	int len, i, a,b;
	int n1, n2, n3;
	scanf("%s", s);
	len = strlen(s);
	if ((len + 2) % 3 == 0) {
		n1 = n2 = n3 = (len + 2) / 3;
	}
	else if (len % 3 == 0) {
		n1 = n3 = len / 3;
		n2 = n1 + 2;
	}
	else {
		n1 = n3 = (len + 1) / 3;
		n2 = n1 + 1;
	}
	
	for (i = 0; i &lt; n1; i++) {
		printf("%c",s[i]);
		a = b = 0;
		if (i != n1-1) {
			while (a &lt;n2-2) {
				printf(" ");
				a++;
			}
		}
		else {
			while (b &lt;n2-2) {
				printf("%c", s[i + b + 1]);
				b++;
			}
		}
		printf("%c\n", s[len - 1 - i]);

	}
	
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 20:41:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 12:41:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981031-hello-world-for-u]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1027 Colors in Mars</title>
		<link>http://jenkin.fun/2018/10/02/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981027-colors-in-mars/</link>
		<pubDate>Tue, 02 Oct 2018 15:01:30 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>People in Mars 
represent the colors in their computers in a similar way as the Earth 
people. That is, a color is represented by a 6-digit number, where the 
first 2 digits are for <code>Red</code>, the middle 2 digits for <code>Green</code>, and the last 2 digits for <code>Blue</code>.
 The only difference is that they use radix 13 (0-9 and A-C) instead of 
16. Now given a color in three decimal numbers (each between 0 and 168),
 you are supposed to output their Mars RGB values.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case which occupies a line containing the three decimal color values.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case you should output the Mars RGB value in the following format: first output <code>#</code>,
 then followed by a 6-digit number where all the English characters must
 be upper-cased. If a single color is only 1-digit long, you must print a
 <code>0</code> to its left.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-">Sample Input:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>15 43 71
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-">Sample Output:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#123456
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
#include &lt;string.h>
int main() {
	int r, g, b;
	int i;
	char s1[2] = { '0' }, s2[2] = { '0' }, s3[2] = { '0' };
	scanf("%d%d%d", &amp;r, &amp;g, &amp;b);
	i = 0;
	while (i&lt;=1) {
		if (r % 13 == 0) s1[i] = '0';
		else if (r % 13 == 1) s1[i] = '1';
		else if (r % 13 == 2) s1[i] = '2';
		else if (r % 13 == 3) s1[i] = '3';
		else if (r % 13 == 4) s1[i] = '4';
		else if (r % 13 == 5) s1[i] = '5';
		else if (r % 13 == 6) s1[i] = '6';
		else if (r % 13 == 7) s1[i] = '7';
		else if (r % 13 == 8) s1[i] = '8';
		else if (r % 13 == 9) s1[i] = '9';
		else if (r % 13 == 10) s1[i] = 'A';
		else if (r % 13 == 11) s1[i] = 'B';
		else if (r % 13 == 12) s1[i] = 'C';
		i++; r = r / 13;
	}
	if (r % 13 == 0) s1[i] = '0';
	else if (r % 13 == 1) s1[i] = '1';
	else if (r % 13 == 2) s1[i] = '2';
	else if (r % 13 == 3) s1[i] = '3';
	else if (r % 13 == 4) s1[i] = '4';
	else if (r % 13 == 5) s1[i] = '5';
	else if (r % 13 == 6) s1[i] = '6';
	else if (r % 13 == 7) s1[i] = '7';
	else if (r % 13 == 8) s1[i] = '8';
	else if (r % 13 == 9) s1[i] = '9';
	else if (r % 13 == 10) s1[i] = 'A';
	else if (r % 13 == 11) s1[i] = 'B';
	else if (r % 13 == 12) s1[i] = 'C';

	i = 0;
	while (i&lt;=1) {
		if (g % 13 == 0) s2[i] = '0';
		else if (g % 13 == 1) s2[i] = '1';
		else if (g % 13 == 2) s2[i] = '2';
		else if (g % 13 == 3) s2[i] = '3';
		else if (g % 13 == 4) s2[i] = '4';
		else if (g % 13 == 5) s2[i] = '5';
		else if (g % 13 == 6) s2[i] = '6';
		else if (g % 13 == 7) s2[i] = '7';
		else if (g % 13 == 8) s2[i] = '8';
		else if (g % 13 == 9) s2[i] = '9';
		else if (g % 13 == 10) s2[i] = 'A';
		else if (g % 13 == 11) s2[i] = 'B';
		else if (g % 13 == 12) s2[i] = 'C';
		i++; g = g / 13;
	}
	if (g % 13 == 0) s2[i] = '0';
	else if (g % 13 == 1) s2[i] = '1';
	else if (g % 13 == 2) s2[i] = '2';
	else if (g % 13 == 3) s2[i] = '3';
	else if (g % 13 == 4) s2[i] = '4';
	else if (g % 13 == 5) s2[i] = '5';
	else if (g % 13 == 6) s2[i] = '6';
	else if (g % 13 == 7) s2[i] = '7';
	else if (g % 13 == 8) s2[i] = '8';
	else if (g % 13 == 9) s2[i] = '9';
	else if (g % 13 == 10) s2[i] = 'A';
	else if (g % 13 == 11) s2[i] = 'B';
	else if (g % 13 == 12) s2[i] = 'C';

	i = 0;
	while (i&lt;=1) {
		if (b % 13 == 0) s3[i] = '0';
		else if (b % 13 == 1) s3[i] = '1';
		else if (b % 13 == 2) s3[i] = '2';
		else if (b % 13 == 3) s3[i] = '3';
		else if (b % 13 == 4) s3[i] = '4';
		else if (b % 13 == 5) s3[i] = '5';
		else if (b % 13 == 6) s3[i] = '6';
		else if (b % 13 == 7) s3[i] = '7';
		else if (b % 13 == 8) s3[i] = '8';
		else if (b % 13 == 9) s3[i] = '9';
		else if (b % 13 == 10) s3[i] = 'A';
		else if (b % 13 == 11) s3[i] = 'B';
		else if (b % 13 == 12) s3[i] = 'C';
		i++; b = b / 13;
	}
	if (b % 13 == 0) s3[i] = '0';
	else if (b % 13 == 1) s3[i] = '1';
	else if (b % 13 == 2) s3[i] = '2';
	else if (b % 13 == 3) s3[i] = '3';
	else if (b % 13 == 4) s3[i] = '4';
	else if (b % 13 == 5) s3[i] = '5';
	else if (b % 13 == 6) s3[i] = '6';
	else if (b % 13 == 7) s3[i] = '7';
	else if (b % 13 == 8) s3[i] = '8';
	else if (b % 13 == 9) s3[i] = '9';
	else if (b % 13 == 10) s3[i] = 'A';
	else if (b % 13 == 11) s3[i] = 'B';
	else if (b % 13 == 12) s3[i] = 'C';
	printf("#");
	for (i = 1; i >= 0; i--) {
		printf("%c", s1[i]);
	}
	for (i =  1; i >= 0; i--) {
		printf("%c", s2[i]);
	}
	for (i =  1; i >= 0; i--) {
		printf("%c", s3[i]);
	}

}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>注：代码可进行精简</h4>
<!-- /wp:heading -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 23:01:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 15:01:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981027-colors-in-mars]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>练习5-1 求m到n之和</title>
		<link>http://jenkin.fun/2018/10/02/%e7%bb%83%e4%b9%a05-1-%e6%b1%82m%e5%88%b0n%e4%b9%8b%e5%92%8c/</link>
		<pubDate>Tue, 02 Oct 2018 15:11:02 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int sum( int m, int n );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中<code>m</code>和<code>n</code>是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

int sum(int m, int n);

int main()
{    
    int m, n;

    scanf("%d %d", &amp;m, &amp;n);
    printf("sum = %d\n", sum(m, n));

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>-5 8
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sum = 21
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int sum(int m, int n) {
	int i, sum = 0;
	for (i = m; i &lt;= n; i++) {
		sum = sum + i;
	}
	return sum;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 23:11:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 15:11:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bb%83%e4%b9%a05-1-%e6%b1%82m%e5%88%b0n%e4%b9%8b%e5%92%8c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e7%bb%83%e4%b9%a05-1-%e6%b1%82m%e5%88%b0n%e4%b9%8b%e5%92%8c%e6%b5%99%e5%a4%a7%e7%89%88%e3%80%8ac%e8%af%ad%e8%a8%80%e7%a8%8b%e5%ba%8f%e8%ae%be%e8%ae%a1%ef%bc%88%e7%ac%ac3%e7%89%88%ef%bc%89%e3%80%8b]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>练习5-2 找两个数中最大者</title>
		<link>http://jenkin.fun/2018/10/02/%e7%bb%83%e4%b9%a05-2-%e6%89%be%e4%b8%a4%e4%b8%aa%e6%95%b0%e4%b8%ad%e6%9c%80%e5%a4%a7%e8%80%85/</link>
		<pubDate>Tue, 02 Oct 2018 15:14:18 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求对两个整数a和b，输出其中较大的数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int max( int a, int b );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中<code>a</code>和<code>b</code>是用户传入的参数，函数返回的是两者中较大的数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

int max( int a, int b );

int main()
{    
    int a, b;

    scanf("%d %d", &amp;a, &amp;b);
    printf("max = %d\n", max(a, b));

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>-5 8
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>max = 8
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int max(int a, int b) {
	if (a > b) {
		return a;
	}
	else return b;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 23:14:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 15:14:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bb%83%e4%b9%a05-2-%e6%89%be%e4%b8%a4%e4%b8%aa%e6%95%b0%e4%b8%ad%e6%9c%80%e5%a4%a7%e8%80%85]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>练习5-3 数字金字塔</title>
		<link>http://jenkin.fun/2018/10/02/%e7%bb%83%e4%b9%a05-3-%e6%95%b0%e5%ad%97%e9%87%91%e5%ad%97%e5%a1%94/</link>
		<pubDate>Tue, 02 Oct 2018 15:21:35 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求实现函数输出n行数字金字塔。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>void pyramid( int n );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中<code>n</code>是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出<code>n</code>行数字金字塔。注</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>意每个数字后面跟一个空格。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

void pyramid( int n );

int main()
{    
    int n;

    scanf("%d", &amp;n);
    pyramid(n);

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>5
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    1 
   2 2 
  3 3 3 
 4 4 4 4 
5 5 5 5 5 
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>void pyramid(int n) {
	int i;
	int j;
	for (j = 1; j &lt;= n; j++) {
		i = n - j;
		while (i != 0) {
			printf(" ");
			i--;
		}
		i = j;
		while (i != 0) {
			printf("%d ", j);
			i--;
		}
		printf("\n");
	}
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 23:21:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 15:21:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bb%83%e4%b9%a05-3-%e6%95%b0%e5%ad%97%e9%87%91%e5%ad%97%e5%a1%94]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>习题5-1 符号函数</title>
		<link>http://jenkin.fun/2018/10/02/%e4%b9%a0%e9%a2%985-1-%e7%ac%a6%e5%8f%b7%e5%87%bd%e6%95%b0/</link>
		<pubDate>Tue, 02 Oct 2018 15:24:00 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求实现符号函数sign(x)。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int sign( int x );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中<code>x</code>是用户传入的整型参数。符号函数的定义为：若<code>x</code>大于0，<code>sign(x)</code> = 1；若<code>x</code>等于0，<code>sign(x)</code> = 0；否则，<code>sign(x)</code> = −1。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

int sign( int x );

int main()
{
    int x;

    scanf("%d", &amp;x);
    printf("sign(%d) = %d\n", x, sign(x));

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>10
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sign(10) = 1
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int sign(int x) {
	if (x > 0) {
		return 1;
	}
	else if (x == 0) {
		return 0;
	}
	else return -1;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date><![CDATA[2018-10-02 23:24:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-02 15:24:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b9%a0%e9%a2%985-1-%e7%ac%a6%e5%8f%b7%e5%87%bd%e6%95%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>习题5-2 使用函数求奇数和</title>
		<link>http://jenkin.fun/2018/10/03/%e4%b9%a0%e9%a2%985-2-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e6%b1%82%e5%a5%87%e6%95%b0%e5%92%8c/</link>
		<pubDate>Wed, 03 Oct 2018 01:00:12 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int even( int n );
int OddSum( int List[], int N );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中函数<code>even</code>将根据用户传入的参数<code>n</code>的奇偶性返回相应值：当<code>n</code>为偶数时返回1，否则返回0。函数<code>OddSum</code>负责计算并返回传入的<code>N</code>个整数<code>List[]</code>中所有奇数的和。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>

#define MAXN 10

int even( int n );
int OddSum( int List[], int N );

int main()
{    
    int List[MAXN], N, i;

    scanf("%d", &amp;N);
    printf("Sum of ( ");
    for ( i=0; i&lt;N; i++ ) {
        scanf("%d", &amp;List[i]);
        if ( even(List[i])==0 )
            printf("%d ", List[i]);
    }
    printf(") = %d\n", OddSum(List, N));

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>6
2 -3 7 88 0 15
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Sum of ( -3 7 15 ) = 19
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int even(int n) {
	if (n % 2 == 0) {
		return 1;
	}
	else return 0;
}
int OddSum(int List[], int N) {
	int i, sum = 0;
	for (i = 0; i &lt; N; i++) {
		if (!even(List[i])) {
			sum = sum + List[i];
}
	}
	return sum;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date><![CDATA[2018-10-03 09:00:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-03 01:00:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b9%a0%e9%a2%985-2-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e6%b1%82%e5%a5%87%e6%95%b0%e5%92%8c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>习题5-3 使用函数计算两点间的距离</title>
		<link>http://jenkin.fun/2018/10/03/%e4%b9%a0%e9%a2%985-3-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e8%ae%a1%e7%ae%97%e4%b8%a4%e7%82%b9%e9%97%b4%e7%9a%84%e8%b7%9d%e7%a6%bb/</link>
		<pubDate>Wed, 03 Oct 2018 01:15:50 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>本题要求实现一个函数，对给定平面任意两点坐标(x​1​​,y​1​​)和(x​2​​,y​2​​)，求这两点之间的距离。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">函数接口定义：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>double dist( double x1, double y1, double x2, double y2 );
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>其中用户传入的参数为平面上两个点的坐标(<code>x1</code>, <code>y1</code>)和(<code>x2</code>, <code>y2</code>)，函数<code>dist</code>应返回两点间的距离。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="-">裁判测试程序样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h>
#include &lt;math.h>

double dist( double x1, double y1, double x2, double y2 );

int main()
{    
    double x1, y1, x2, y2;

    scanf("%lf %lf %lf %lf", &amp;x1, &amp;y1, &amp;x2, &amp;y2);
    printf("dist = %.2f\n", dist(x1, y1, x2, y2));

    return 0;
}

/* 你的代码将被嵌在这里 */
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输入样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>10 10 200 100
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="-">输出样例：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>dist = 210.24
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>double dist(double x1, double y1, double x2, double y2) {
	double d;
	d = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));
	return d;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date><![CDATA[2018-10-03 09:15:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-03 01:15:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b9%a0%e9%a2%985-3-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e8%ae%a1%e7%ae%97%e4%b8%a4%e7%82%b9%e9%97%b4%e7%9a%84%e8%b7%9d%e7%a6%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[浙大版《C语言程序设计（第3版）》题目集]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PAT每日一题&#124;1036 Boys vs Girls</title>
		<link>http://jenkin.fun/2018/10/10/pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981036-boys-vs-girls/</link>
		<pubDate>Wed, 10 Oct 2018 10:36:20 +0000</pubDate>
		<dc:creator><![CDATA[jenkin]]></dc:creator>
		<guid isPermaLink="false">http://jenkin.fun/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>This time you are 
asked to tell the difference between the lowest grade of all the male 
students and the highest grade of all the female students.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="input-specification-">Input Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each input file contains one test case. Each case contains a positive integer N, followed by N lines of student information. Each line contains a student's <code>name</code>, <code>gender</code>, <code>ID</code> and <code>grade</code>, separated by a space, where <code>name</code> and <code>ID</code> are strings of no more than 10 characters with no space, <code>gender</code> is either <code>F</code> (female) or <code>M</code> (male), and <code>grade</code> is an integer between 0 and 100. It is guaranteed that all the grades are distinct.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="output-specification-">Output Specification:</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For each test case, output in 3 lines. The first line gives the name 
and ID of the female student with the highest grade, and the second line
 gives that of the male student with the lowest grade. The third line 
gives the difference grade​F​​−grade​M​​. If one such kind of student is missing, output <code>Absent</code> in the corresponding line, and output <code>NA</code> in the third line instead.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-1-">Sample Input 1:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>3
Joe M Math990112 89
Mike M CS991301 100
Mary F EE990830 95
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-1-">Sample Output 1:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Mary EE990830
Joe Math990112
6
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-input-2-">Sample Input 2:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>1
Jean M AA980920 60
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3 id="sample-output-2-">Sample Output 2:</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Absent
Jean AA980920
NA
</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>
#include &lt;stdio.h>
#include &lt;math.h>
#include &lt;string.h>
struct stu
{
	char name[100];
	char gender;
	char id[100];
	int grade;
}stu[10000],f,m;

int main() {
	int n;
	int i;
	int result=0;
	int lenf, lenm;
	f.grade = -1;
	m.grade = 101;
	scanf("%d", &amp;n);
	if (n != 0) {

		for (i = 0; i &lt; n; i++) {
			scanf("%s %c %s %d", &amp;stu[i].name, &amp;stu[i].gender, &amp;stu[i].id, &amp;stu[i].grade);
			if (stu[i].gender == 'M') {

				if (m.grade > stu[i].grade) {
					m = stu[i];
				}
			}
			else {
				if (f.grade &lt; stu[i].grade) {
					f = stu[i];
				}
			}
		}
		lenf = strlen(f.id);
		lenm = strlen(m.id);
		if (lenf != 0 &amp; lenm != 0) {
			result = f.grade - m.grade;
			printf("%s %s\n", f.name, f.id);
			printf("%s %s\n", m.name, m.id);
			printf("%d", result);
		}
		else if (lenf == 0 &amp; lenm != 0) {
			printf("Absent\n%s %s\nNA", m.name, m.id);
		}
		else if (lenf != 0 &amp; lenm == 0) {
			printf("%s %s\nAbsent\nNA", f.name, f.id);
		}
		
	}
	else {
		printf("Absent\nAbsent\nNA");
	}
	
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date><![CDATA[2018-10-10 18:36:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-10 10:36:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pat%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%981036-boys-vs-girls]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pat"><![CDATA[PAT]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
